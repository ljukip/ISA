{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.css","./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.html","./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.ts","./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.css","./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.html","./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.ts","./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.css","./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.html","./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.ts","./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.css","./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.html","./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.ts","./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.css","./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.html","./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.ts","./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.css","./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.html","./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.ts","./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.css","./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.html","./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.ts","./src/app/component/hotel/prikaz-soba/prikaz-soba.component.css","./src/app/component/hotel/prikaz-soba/prikaz-soba.component.html","./src/app/component/hotel/prikaz-soba/prikaz-soba.component.ts","./src/app/component/obavestenja/page-not-found/page-not-found.component.css","./src/app/component/obavestenja/page-not-found/page-not-found.component.html","./src/app/component/obavestenja/page-not-found/page-not-found.component.ts","./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.css","./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.html","./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.ts","./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.css","./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.html","./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.ts","./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.css","./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.html","./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.ts","./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.css","./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.html","./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.ts","./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.css","./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.html","./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.ts","./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.css","./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.html","./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.ts","./src/app/h-interceptor.service.ts","./src/app/model/hotel/cenovnikSobe.ts","./src/app/model/hotel/hotel.ts","./src/app/model/hotel/opcija.ts","./src/app/model/hotel/soba.ts","./src/app/model/hotel/zakupSoba.ts","./src/app/model/opsti/adresa.ts","./src/app/model/vozila/garaza.ts","./src/app/model/vozila/kompanijaVozila.ts","./src/app/model/vozila/vozilo.ts","./src/app/model/vozila/zakupVozila.ts","./src/app/service/hotel/cenovnik.service.ts","./src/app/service/hotel/hotel.service.ts","./src/app/service/hotel/opcija.service.ts","./src/app/service/hotel/soba.service.ts","./src/app/service/vozila/garaza.service.ts","./src/app/service/vozila/kompanija-vozila.service.ts","./src/app/service/vozila/vozilo.service.ts","./src/environments/environment.ts","./src/main.ts","./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<nav class=\\\"navbar\\\" style=\\\"margin-bottom: 0px; background-color: aliceblue;\\\" *ngIf = \\\"disableNavBar\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">PUTOVANJE</a>\\r\\n    </div>\\r\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n\\r\\n          <li><a *ngIf=\\\"!prijavljen\\\" [routerLink]=\\\"['/registracija']\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Registruj se</a></li>\\r\\n          <li><a *ngIf=\\\"!prijavljen\\\" [routerLink]=\\\"['/login']\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Prijavi se</a></li>\\r\\n          <li><a *ngIf=\\\"prijavljen\\\" (click)=\\\"odjaviSe()\\\" ><span class=\\\"glyphicon glyphicon-log-out\\\"></span> Odjavi se</a></li>\\r\\n        </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<nav class=\\\"navbar\\\" style=\\\"margin-bottom: 0px; background-color: aliceblue;\\\" *ngIf = \\\"disableNavBar\\\">\\r\\n  <ul class=\\\"nav navbar-nav\\\">\\r\\n    <li>\\r\\n\\r\\n      <div class=\\\"dropdown\\\" dropdown >\\r\\n        <button class=\\\"btn\\\" style=\\\"background-color: aliceblue; color: black; border-color: aliceblue; margin: 10px; margin-bottom: 0px;\\\" dropdown-open>Aviokompanije</button>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li><a [routerLink]=\\\"['/aviokompanije']\\\">Pregled</a></li>          \\r\\n            <li *ngIf=\\\"dodavanje()\\\"><a [routerLink]=\\\"['/aviokompanije/add']\\\">Dodavanje</a></li>\\r\\n          </ul>\\r\\n    </div>\\r\\n    </li>\\r\\n    <li>\\r\\n\\r\\n         <div class=\\\"dropdown\\\" dropdown>\\r\\n          <button class=\\\"btn\\\" style=\\\"background-color: aliceblue; color: black; border-color: aliceblue; margin: 10px; margin-bottom: 0px;\\\" dropdown-open>Hoteli</button>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li><a [routerLink]=\\\"['/hoteli']\\\">Pregled</a></li>\\r\\n            <li *ngIf=\\\"dodavanje()\\\"><a [routerLink]=\\\"['/hoteli/add']\\\">Dodavanje</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n\\r\\n    </li>\\r\\n    <li>\\r\\n\\r\\n        <div class=\\\"dropdown\\\" dropdown>\\r\\n         <button class=\\\"btn\\\" style=\\\"background-color: aliceblue; color: black; border-color: aliceblue; margin: 10px; margin-bottom: 0px;\\\" dropdown-open>Kompanije Vozila</button>\\r\\n         <ul class=\\\"dropdown-menu\\\">\\r\\n             <li><a [routerLink]=\\\"['/kompanije-vozila']\\\">Pregled</a></li>\\r\\n             <li *ngIf=\\\"dodavanje()\\\"><a [routerLink]=\\\"['/kompanije-vozila/add']\\\">Dodavanje</a></li>\\r\\n           </ul>\\r\\n         </div>\\r\\n\\r\\n     </li>\\r\\n\\r\\n     <li *ngIf=\\\"profilKorisnika()\\\">\\r\\n\\r\\n        <div class=\\\"dropdown\\\" dropdown>\\r\\n          <button class=\\\"btn\\\" style=\\\"background-color: aliceblue; color: black; border-color: aliceblue; margin: 10px; margin-bottom: 0px;\\\" dropdown-open>Korisnik</button>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n              <li><a (click)=\\\"goToProfile()\\\">Pregled</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n     </li>\\r\\n\\r\\n     <li *ngIf=\\\"profilAdmina()\\\">\\r\\n        <div class=\\\"dropdown\\\" dropdown>\\r\\n          <button class=\\\"btn\\\" style=\\\"background-color: aliceblue; color: black; border-color: aliceblue; margin: 10px; margin-bottom: 0px;\\\" dropdown-open>Korisnik</button>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n              <li><a (click)=\\\"goToProfileAdmin()\\\">Pregled admin stranice</a></li>\\r\\n              <li *ngIf = \\\"vidljivoPopusti()\\\" ><a [routerLink]=\\\"['/popusti']\\\">Podesi popuste</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n     </li>\\r\\n  </ul>\\r\\n</nav>\\r\\n\\r\\n<br>\\r\\n\\r\\n\\t<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  public disableNavBar: boolean = true;\r\n  //public logovaniKorisnik: Korisnik;\r\n  public prijavljen: boolean = false;\r\n  public tipkorisnika: string;\r\n\r\n\r\n  constructor(private authService: AuthService, private router: Router) { \r\n    let res = localStorage.getItem('token');\r\n    if(res != null){\r\n      this.prijavljen = true;\r\n     // let uloga = this.authService.getRoles(res);\r\n      //let email = this.authService.getUsername(res);\r\n      //this.tipkorisnika = this.authService.getRoles(res);\r\n\r\n      /*this.korisnikService.findByEmail(email).subscribe(\r\n        s => {\r\n          this.logovaniKorisnik = s;\r\n\r\n          if ( (uloga === 'ROLE_Administrator_aviokompanije' || \r\n          uloga === 'ROLE_Administrator_hotela' ||\r\n          uloga === 'ROLE_Administrator_rent_a_car_servisa' ) && !this.logovaniKorisnik.aktiviranNalog){\r\n            this.disableNavBar = false;\r\n          }\r\n          else{\r\n            this.disableNavBar = true;\r\n          }\r\n          \r\n        },\r\n        err => console.log(\"err\")\r\n      );*/\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  goToProfile(){\r\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\r\n      //this.router.navigate(['korisnik/' + this.logovaniKorisnik.id]);\r\n    }\r\n  }\r\n\r\n  podesiPopuste(){\r\n    if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\r\n      this.router.navigate(['admin/popusti']);\r\n    }\r\n  }\r\n\r\n  odjaviSe(){\r\n    this.authService.logout();\r\n    this.prijavljen = false;\r\n    this.router.navigate(['login']);\r\n\r\n  }\r\n\r\n  dodavanje(){\r\n    // if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\r\n    //   return true;\r\n    // }\r\n    // return false; \r\n    return true;\r\n  }\r\n\r\n  profilKorisnika(){\r\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\r\n      return true;\r\n    }\r\n    return false; \r\n  }\r\n\r\n  profilAdmina(){\r\n    if(this.tipkorisnika === \"ROLE_Administrator_aviokompanije\"){\r\n      return true;\r\n    }\r\n\r\n    if(this.tipkorisnika === \"ROLE_Administrator_hotela\"){\r\n      return true;\r\n    }\r\n\r\n    if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\r\n      return true;\r\n    }\r\n\r\n    if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\r\n      return true;\r\n    }\r\n\r\n    return false; \r\n  }\r\n\r\n  vidljivoPopusti(){\r\n    if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  goToProfileAdmin(){\r\n    if(this.tipkorisnika === \"ROLE_Administrator_aviokompanije\" || this.tipkorisnika === \"ROLE_Administrator_hotela\" ||\r\n    this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\" || this.tipkorisnika === \"ROLE_Administrator_sistema\"){\r\n      //this.router.navigate(['admin/' + this.logovaniKorisnik.id]);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AppComponent } from './app.component';\r\nimport { RatingModule } from \"ngx-rating\";\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { HInterceptorService } from './h-interceptor.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {DropdownModule} from \"ngx-dropdown\";\r\nimport {TabsModule} from \"ngx-tabs\";\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { AuthService } from './auth.service';\r\nimport { Ng5SliderModule } from 'ng5-slider';\r\nimport { PageNotFoundComponent } from './component/obavestenja/page-not-found/page-not-found.component';\r\nimport { PrikazVozilaComponent } from './component/vozila/prikaz-vozila/prikaz-vozila.component';\r\nimport { PrikazKompanijaVozilaComponent } from './component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component';\r\nimport { AzuriranjeVozilaComponent } from './component/vozila/azuriranje-vozila/azuriranje-vozila.component';\r\nimport { AzuriranjeKompanijeVozilaComponent } from './component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component';\r\nimport { VoziloService } from './service/vozila/vozilo.service';\r\nimport { KompanijaVozilaService } from './service/vozila/kompanija-vozila.service';\r\nimport { PrikazGarazaComponent } from './component/vozila/prikaz-garaza/prikaz-garaza.component';\r\nimport { GarazaService } from './service/vozila/garaza.service';\r\nimport { AzuriranjeGarazeComponent } from './component/vozila/azuriranje-garaze/azuriranje-garaze.component';\r\nimport { PrikazHotelaComponent } from './component/hotel/prikaz-hotela/prikaz-hotela.component';\r\nimport { AzuriranjeHotelaComponent } from './component/hotel/azuriranje-hotela/azuriranje-hotela.component';\r\nimport { AzuriranjeOpcijaComponent } from './component/hotel/azuriranje-opcija/azuriranje-opcija.component';\r\nimport { PrikazOpcijaComponent } from './component/hotel/prikaz-opcija/prikaz-opcija.component';\r\nimport { PrikazSobaComponent } from './component/hotel/prikaz-soba/prikaz-soba.component';\r\nimport { AzuriranjeSobaComponent } from './component/hotel/azuriranje-soba/azuriranje-soba.component';\r\nimport { HotelService } from './service/hotel/hotel.service';\r\nimport { SobaService } from './service/hotel/soba.service';\r\nimport { OpcijaService } from './service/hotel/opcija.service';\r\nimport { PrikazCenovnikaComponent } from './component/hotel/prikaz-cenovnika/prikaz-cenovnika.component';\r\nimport { AzuriranjeCenovnikaComponent } from './component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component';\r\nimport { CenovnikService } from './service/hotel/cenovnik.service';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  /*{ path: 'record/:id', component: RecordDetailsComponent },\r\n  { path: 'main', component: MainComponent },\r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },*/\r\n\r\n  // ----------------------------------------rent a car\r\n  { path: 'kompanije-vozila', component: PrikazKompanijaVozilaComponent },\r\n  { path: 'kompanije-vozila/add', component: AzuriranjeKompanijeVozilaComponent },\r\n  { path: 'kompanije-vozila/add/:id', component: AzuriranjeKompanijeVozilaComponent },\r\n  \r\n  { path: 'kompanije-vozila/:kompanija-id/garaze', component: PrikazGarazaComponent },\r\n  { path: 'kompanije-vozila/:kompanija-id/garaze/add', component: AzuriranjeGarazeComponent },\r\n  { path: 'kompanije-vozila/:kompanija-id/garaze/add/:garaza-id', component: AzuriranjeGarazeComponent },\r\n\r\n  { path: 'kompanije-vozila/:kompanija-id/garaze/:garaza-id/vozila', component: PrikazVozilaComponent },\r\n  { path: 'kompanije-vozila/:kompanija-id/garaze/:garaza-id/vozila/add', component: AzuriranjeVozilaComponent },\r\n  { path: 'kompanije-vozila/:kompanija-id/garaze/:garaza-id/vozila/add/:id', component: AzuriranjeVozilaComponent },\r\n\r\n\r\n  // --------------------------------------------- hotel\r\n  { path: 'hoteli', component: PrikazHotelaComponent },\r\n  { path: 'hoteli/add', component: AzuriranjeHotelaComponent },\r\n  { path: 'hoteli/add/:id', component: AzuriranjeHotelaComponent },\r\n\r\n  { path: 'hoteli/:hotel-id/opcije', component: PrikazOpcijaComponent },\r\n  { path: 'hoteli/:hotel-id/opcije/add', component: AzuriranjeOpcijaComponent },\r\n  { path: 'hoteli/:hotel-id/opcije/add/:opcija-id', component: AzuriranjeOpcijaComponent },\r\n  \r\n  { path: 'hoteli/:hotel-id/sobe', component: PrikazSobaComponent },\r\n  { path: 'hoteli/:hotel-id/sobe/add', component: AzuriranjeSobaComponent },\r\n  { path: 'hoteli/:hotel-id/sobe/add/:soba-id', component: AzuriranjeSobaComponent },\r\n\r\n  { path: 'hoteli/:hotel-id/sobe/:soba-id/cenovnici', component: PrikazCenovnikaComponent },\r\n  { path: 'hoteli/:hotel-id/sobe/:soba-id/cenovnici/add', component: AzuriranjeCenovnikaComponent },\r\n  { path: 'hoteli/:hotel-id/sobe/:soba-id/cenovnici/add/:id', component: AzuriranjeCenovnikaComponent },\r\n  \r\n \r\n  { path: 'putanja', component: PageNotFoundComponent },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    PrikazVozilaComponent,\r\n    PrikazKompanijaVozilaComponent,\r\n    AzuriranjeVozilaComponent,\r\n    AzuriranjeKompanijeVozilaComponent,\r\n    PrikazGarazaComponent,\r\n    AzuriranjeGarazeComponent,\r\n    PrikazHotelaComponent,\r\n    AzuriranjeHotelaComponent,\r\n    AzuriranjeOpcijaComponent,\r\n    PrikazOpcijaComponent,\r\n    PrikazSobaComponent,\r\n    AzuriranjeSobaComponent,\r\n    PrikazCenovnikaComponent,\r\n    AzuriranjeCenovnikaComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule,\r\n    RatingModule,\r\n    DropdownModule,\r\n    TabsModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    Ng5SliderModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: false, useHash: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  providers: [ //registrujem servise obaveznoo!!!!!!\r\n    AuthService,\r\n    VoziloService,\r\n    KompanijaVozilaService,\r\n    GarazaService,\r\n    HotelService,\r\n    SobaService,\r\n    OpcijaService,\r\n    CenovnikService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HInterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\n//import { KorisnikRegistracija } from './model/korisnik/korisnikRegistracija';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private router: Router) { }\r\n\r\n    /*getRoles(token: string) {\r\n      let jwtData = token.split('.')[1];\r\n      let decodedJwtJsonData = window.atob(jwtData);\r\n      let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n      console.log(decodedJwtData);\r\n      console.log(decodedJwtData.auth[0].authority);\r\n      console.log(decodedJwtData.sub); //username\r\n      return decodedJwtData.auth[0].authority; //you can access role or username\r\n    }\r\n  \r\n    getUsername(token: string) : string{\r\n      let jwtData = token.split('.')[1];\r\n      let decodedJwtJsonData = window.atob(jwtData);\r\n      let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n      console.log(decodedJwtData);\r\n      console.log(decodedJwtData.auth[0].authority);\r\n      console.log(decodedJwtData.sub); //username\r\n      return decodedJwtData.sub; //you can access role or username\r\n    }\r\n  \r\n    login(email:string, lozinka:string): Observable<string>{\r\n      const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\r\n      return this.http\r\n        .post<string>('/api/login', {email, lozinka});\r\n    }*/\r\n\r\n    /*signup(korisnik: KorisnikRegistracija): Observable<string>{\r\n      return this.http\r\n        .post<string>('/api/signup', korisnik);\r\n    }\r\n\r\n    registerAdmin(id: number,korisnik: KorisnikRegistracija): Observable<string>{\r\n      return this.http\r\n        .post<string>(`/api/register/${id}`, korisnik);\r\n    }*/\r\n\r\n    logout(): void {\r\n      localStorage.removeItem('token');\r\n      this.router.navigate(['login']);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.css\n// module id = ./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\" #formFilijala=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje/Dodavanje cenovnika</h3>\\n                <div class=\\\"form-group\\\">\\n                <label>Pocetni datum </label>\\n                <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Pocetni datum:\\\" \\n                [(ngModel)]=\\\"cenovnik.pocetniDatum\\\"\\n                [min]=\\\"min\\\"\\n                (change)=\\\"promenaDatuma()\\\"\\n                [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n        <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Krajnji datum </label>\\n                  <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Krajnji datum:\\\" \\n                  [(ngModel)]=\\\"cenovnik.krajnjiDatum\\\"\\n                  [min]=\\\"min\\\"\\n                  (change)=\\\"promenaDatuma()\\\"\\n                  [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n          <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                    <label>Cena</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cena\\\" name=\\\"cena\\\" minlength=\\\"1\\\" #zemlja=\\\"ngModel\\\" placeholder=\\\"cena\\\" required [(ngModel)] = \\\"cenovnik.cena\\\">\\n                  <small [hidden]=\\\"zemlja.valid || (zemlja.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Cena je obavezna (veca od nule).\\n                  </small>\\n                 </div>\\n              <button *ngIf=\\\"isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n              <button *ngIf=\\\"!isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"save()\\\">Kreiraj</button>\\n              \\n              <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.html\n// module id = ./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CenovnikSobe } from 'app/model/hotel/cenovnikSobe';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CenovnikService } from 'app/service/hotel/cenovnik.service';\n\n@Component({\n  selector: 'app-azuriranje-cenovnika',\n  templateUrl: './azuriranje-cenovnika.component.html',\n  styleUrls: ['./azuriranje-cenovnika.component.css']\n})\nexport class AzuriranjeCenovnikaComponent implements OnInit {\n\n  id: number; //cenovnik-id\n  kompanijaId: number;\n  sobaId: number;\n  cenovnik: CenovnikSobe = new CenovnikSobe();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n\n  constructor(private cenovnikService :CenovnikService,  private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      this.kompanijaId = +params['hotel-id'];\n      this.sobaId = +params['soba-id'];\n      if(params['id'] != null){\n        this.id = +params['id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          this.cenovnikService.findOne(this.kompanijaId, this.sobaId, this.id).subscribe(\n            e => {\n              this.cenovnik = e;\n              \n            }\n          )\n          this.isDataAvailable = true;\n        }\n        else{\n          this.isDataAvailable = false;\n          this.cenovnik = new CenovnikSobe();\n        }\n     }\n    //  else{\n    //   this.isDataAvailable = false;\n    //   this.opcija = new Opcija();\n\n    //   this.kompanijaService.findOne(this.kompanijaId).subscribe(\n    //     succ => {\n    //       this.opcija.kompanijaDTO = succ;\n    //     }\n    //   );\n    // }\n   });\n  }\n\n  save(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\"){\n      this.cenovnik.pocetniDatum = this.konvertujUDobroVreme(this.cenovnik.pocetniDatum.toString().substring(4,15));\n      this.cenovnik.krajnjiDatum = this.konvertujUDobroVreme(this.cenovnik.krajnjiDatum.toString().substring(4,15));\n      this.cenovnikService.add(this.cenovnik, this.kompanijaId, this.sobaId).subscribe(\n        s => {\n          this.cenovnik = s;\n          this.router.navigate(['hoteli/' + this.kompanijaId + '/sobe/' + this.sobaId + '/cenovnici']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  update(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\"){\n      this.cenovnik.pocetniDatum = this.konvertujUDobroVreme(this.cenovnik.pocetniDatum.toString().substring(4,15));\n      this.cenovnik.krajnjiDatum = this.konvertujUDobroVreme(this.cenovnik.krajnjiDatum.toString().substring(4,15));\n      this.cenovnikService.update(this.kompanijaId, this.sobaId, this.cenovnik).subscribe(\n        s => {\n         this.cenovnik = s;\n         this.router.navigate(['hoteli/' + this.kompanijaId + '/sobe/' + this.sobaId + '/cenovnici']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  goBack(){\n    this.router.navigate(['hoteli/' + this.kompanijaId + '/sobe/' + this.sobaId + '/cenovnici']);\n  }\n\n  proveriUnos(): string{\n    if(this.cenovnik.cena < 0 ){\n      return \"Morate popuniti cenu koja mora biti pozitivan broj\";\n    }\n\n    return \"OK\"\n  }\n\n  konvertujUDobroVreme(primljeniString: string): string{\n    let pravoVreme: string;\n    pravoVreme = primljeniString.substring(7,11) + \"-\" + primljeniString.substring(0,3) + \"-\" + primljeniString.substring(4,6);\n    pravoVreme = this.mesecPrebaciUbroj(pravoVreme); \n    //alert(pravoVreme)\n    return pravoVreme;\n  }\n\n  mesecPrebaciUbroj(primljeniString: string): string{\n    primljeniString = primljeniString.replace(\"Jan\", \"01\");\n    primljeniString = primljeniString.replace(\"Feb\", \"02\");\n    primljeniString = primljeniString.replace(\"Mar\", \"03\");\n    primljeniString = primljeniString.replace(\"Apr\", \"04\");\n    primljeniString = primljeniString.replace(\"May\", \"05\");\n    primljeniString = primljeniString.replace(\"Jun\", \"06\");\n    primljeniString = primljeniString.replace(\"Jul\", \"07\");\n    primljeniString = primljeniString.replace(\"Aug\", \"08\");\n    primljeniString = primljeniString.replace(\"Sep\", \"09\");\n    primljeniString = primljeniString.replace(\"Oct\", \"10\");\n    primljeniString = primljeniString.replace(\"Nov\", \"11\");\n    primljeniString = primljeniString.replace(\"Dec\", \"12\");\n\n    return primljeniString;\n    \n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/azuriranje-cenovnika/azuriranje-cenovnika.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.css\n// module id = ./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\" #formRent=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje Hotela</h3>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"naziv\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #naziv=\\\"ngModel\\\" name=\\\"naziv\\\" placeholder=\\\"Naziv\\\" required [(ngModel)] = \\\"hotel.naziv\\\">\\n                  <small [hidden]=\\\"naziv.valid || (naziv.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                    Naziv je obavezan(minimum 3 karaktera a maksimum 30 karaktera).\\n                  </small>\\n              </div>\\n               <div class=\\\"form-group\\\">\\n                  <label>Zemlja</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zemlja\\\" name=\\\"zemlja\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #zemlja=\\\"ngModel\\\" placeholder=\\\"zemlja\\\" required [(ngModel)] = \\\"hotel.adresaDTO.zemlja\\\">\\n                <small [hidden]=\\\"zemlja.valid || (zemlja.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Zemlja je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Grad</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"grad\\\" name=\\\"grad\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #grad=\\\"ngModel\\\" placeholder=\\\"grad\\\" required [(ngModel)] = \\\"hotel.adresaDTO.grad\\\">\\n                <small [hidden]=\\\"grad.valid || (grad.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Grad je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Ulica</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #ulica=\\\"ngModel\\\" placeholder=\\\"ulica\\\" required [(ngModel)] = \\\"hotel.adresaDTO.ulica\\\">\\n                <small [hidden]=\\\"ulica.valid || (ulica.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Ulica je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Broj</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"broj\\\" name=\\\"broj\\\" minlength=\\\"1\\\"  #broj=\\\"ngModel\\\" placeholder=\\\"broj\\\" required [(ngModel)] = \\\"hotel.adresaDTO.broj\\\">\\n                <small [hidden]=\\\"broj.valid || (broj.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Broj je obavezan (Veci od 0).\\n                </small> \\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Geografska duzina</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" id=\\\"duzina\\\" name=\\\"duzina\\\" #duzina = \\\"ngModel\\\" placeholder=\\\"Geografska duzina\\\" required [(ngModel)] = \\\"hotel.longitude\\\">\\n              <small [hidden]=\\\"duzina.valid || (duzina.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Geografska duzina je obavezna (minimum 1 karaktera a maksimum 30 karaktera).\\n              </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Geografska sirina</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"30\\\" id=\\\"sirina\\\" name=\\\"sirina\\\" #sirina = \\\"ngModel\\\" placeholder=\\\"Geografska sirina\\\" required [(ngModel)] = \\\"hotel.latitude\\\">\\n                <small [hidden]=\\\"sirina.valid || (sirina.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Geografska sirina je obavezna (minimum 1 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <textarea [(ngModel)] = \\\"hotel.opis\\\" maxlength=\\\"140\\\" #opis=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" type=\\\"textarea\\\" id=\\\"promotivniOpis\\\" placeholder=\\\"Promotivni opis\\\" maxlength=\\\"140\\\" rows=\\\"7\\\" style=\\\"max-width: 100%; min-width: 100%;\\\" ></textarea>\\n                <span class=\\\"help-block\\\"><p id=\\\"characterLeft\\\" class=\\\"help-block \\\">Maksimum 140 karaktera</p></span>                    \\n                <small [hidden]=\\\"opis.valid || (opis.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Promotivni opis je obavezan (minimum 3 karaktera a maksimum 140 karaktera).\\n                </small>\\n              </div>\\n                \\n            <button *ngIf=\\\"isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formRent.valid\\\" id=\\\"submit\\\" style=\\\"margin:5px;\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n            <button *ngIf=\\\"!isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formRent.valid\\\" id=\\\"submit\\\" style=\\\"margin:5px;\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"save()\\\">Kreiraj</button>\\n            <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" style=\\\"margin:5px;\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.html\n// module id = ./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Hotel } from 'app/model/hotel/hotel';\nimport { HotelService } from 'app/service/hotel/hotel.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-azuriranje-hotela',\n  templateUrl: './azuriranje-hotela.component.html',\n  styleUrls: ['./azuriranje-hotela.component.css']\n})\nexport class AzuriranjeHotelaComponent implements OnInit {\n\n  id: number;\n\n  hotel: Hotel = new Hotel();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n  maksimalnaDuzinaOpis: number = 140;\n\n  constructor(private hotelService :HotelService, private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['id'] != null){\n        this.id = +params['id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          this.hotelService.findOne(this.id).subscribe(\n            e => {\n              this.hotel = e;\n            }\n          )\n        \n          this.isDataAvailable = true;\n        }\n        else{\n          //znaci dodajem novi koji ne postoji\n          this.hotel = new Hotel();\n          this.isDataAvailable = false;\n        }\n     }\n   });\n  }\n\n  save(){\n    let message: string = this.proveriUnosRentacar();\n    if(message === \"OK\"){\n      this.hotelService.add(this.hotel).subscribe(\n        s => {\n          this.hotel = s;\n          this.router.navigate(['hoteli']);\n        },\n        err=> console.log(\"err\")\n      );\n    } \n    else{\n      alert(message);\n    }   \n  }\n\n  update(){\n    let message: string = this.proveriUnosRentacar();\n    if(message === \"OK\"){\n      this.hotelService.update(this.hotel.id, this.hotel).subscribe(\n        s => {\n          this.hotel = s;\n          \n          this.router.navigate(['hoteli']);\n        },\n        err=> console.log(\"err\")\n      );    \n    }\n    else{\n      alert(message);\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['hoteli']);\n  }\n\n  proveriUnosRentacar(): string{\n    if(this.hotel.naziv === \"\" || this.hotel.naziv.length > this.maksimalnaDuzina){\n      return \"Morate popuniti naziv rent-a koja mora biti kraci od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    /*if(this.hotel.adresa === \"\" ||this.hotel.adresa.length > this.maksimalnaDuzina){\n      return \"Morate popuniti adresu rent-a koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }*/\n\n    if(this.hotel.opis === \"\" || this.hotel.opis.length > this.maksimalnaDuzinaOpis){\n      return \"Morate popuniti opis rent-a koji mora biti kraca od \" + this.maksimalnaDuzinaOpis + \" karaktera\";\n    }\n    /*if(isNaN(this.hotel.latitude) || isNaN(this.hotel.longitude)){\n      return \"Geografska sirina i duzina moraju biti brojevi\";\n    }*/\n    return \"OK\"\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/azuriranje-hotela/azuriranje-hotela.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.css\n// module id = ./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\" #formFilijala=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje/Dodavanje Opcije</h3>\\n                <div class=\\\"form-group\\\">\\n                <label>Ime </label>\\n                <input type=\\\"text\\\"  class=\\\"form-control\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #ime=\\\"ngModel\\\" id=\\\"ime\\\" name=\\\"ime\\\" placeholder=\\\"Ime\\\" required [(ngModel)] = \\\"opcija.naziv\\\">\\n                <small [hidden]=\\\"ime.valid || (ime.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Ime je obavezno (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                    <label>Cena</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cena\\\" name=\\\"cena\\\" minlength=\\\"1\\\" #zemlja=\\\"ngModel\\\" placeholder=\\\"cena\\\" required [(ngModel)] = \\\"opcija.cena\\\">\\n                  <small [hidden]=\\\"zemlja.valid || (zemlja.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Cena je obavezna (veca od nule).\\n                  </small>\\n                 </div>\\n              <button *ngIf=\\\"isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n              <button *ngIf=\\\"!isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"save()\\\">Kreiraj</button>\\n              \\n              <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.html\n// module id = ./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Opcija } from 'app/model/hotel/opcija';\nimport { OpcijaService } from 'app/service/hotel/opcija.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotelService } from 'app/service/hotel/hotel.service';\n\n@Component({\n  selector: 'app-azuriranje-opcija',\n  templateUrl: './azuriranje-opcija.component.html',\n  styleUrls: ['./azuriranje-opcija.component.css']\n})\nexport class AzuriranjeOpcijaComponent implements OnInit {\n\n  id: number; //opcija-id\n  kompanijaId: number;\n  opcija: Opcija = new Opcija();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n\n  constructor(private opcijaService :OpcijaService,  private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      this.kompanijaId = +params['hotel-id'];\n      if(params['opcija-id'] != null){\n        this.id = +params['opcija-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          this.opcijaService.findOne(this.kompanijaId, this.id).subscribe(\n            e => {\n              this.opcija = e;\n              \n            }\n          )\n          this.isDataAvailable = true;\n        }\n        else{\n          this.isDataAvailable = false;\n          this.opcija = new Opcija();\n        }\n     }\n    //  else{\n    //   this.isDataAvailable = false;\n    //   this.opcija = new Opcija();\n\n    //   this.kompanijaService.findOne(this.kompanijaId).subscribe(\n    //     succ => {\n    //       this.opcija.kompanijaDTO = succ;\n    //     }\n    //   );\n    // }\n   });\n  }\n\n  save(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\"){\n      this.opcijaService.add(this.opcija, this.kompanijaId).subscribe(\n        s => {\n          this.opcija = s;\n          this.router.navigate(['hoteli/' + this.kompanijaId + '/opcije']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  update(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\"){\n      this.opcijaService.update(this.kompanijaId, this.opcija).subscribe(\n        s => {\n         this.opcija = s;\n         this.router.navigate(['hoteli/' + this.kompanijaId + '/opcije']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  goBack(){\n    this.router.navigate(['hoteli/' + this.kompanijaId + '/opcije']);\n  }\n\n  proveriUnos(): string{\n    if(this.opcija.naziv === \"\" || this.opcija.naziv.length > this.maksimalnaDuzina){\n      return \"Morate popuniti ime filijale koje mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    return \"OK\"\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/azuriranje-opcija/azuriranje-opcija.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.css\n// module id = ./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\"  #formVozilo=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje/Dodavanje Sobe</h3>\\n              <div class=\\\"form-group\\\">\\n                  <label>Sprat</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"1\\\" #naziv=\\\"ngModel\\\" id=\\\"model\\\" name=\\\"model\\\" placeholder=\\\"Sprat\\\" required [(ngModel)] = \\\"soba.sprat\\\">\\n                  <small [hidden]=\\\"naziv.valid || (naziv.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                    Sprat je obavezan (veci od nule).\\n                  </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Tip</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"  minlength=\\\"3\\\"  maxlength=\\\"30\\\" #tip=\\\"ngModel\\\" id=\\\"tip\\\" name=\\\"tip\\\" placeholder=\\\"Tip\\\" required [(ngModel)] = \\\"soba.tip\\\">\\n                <small [hidden]=\\\"tip.valid || (tip.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Tip je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Cena vozila</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\"  #cena=\\\"ngModel\\\" id=\\\"cena\\\" name=\\\"cena\\\" placeholder=\\\"Cena po danu\\\" required [(ngModel)] = \\\"soba.cenaPoDanu\\\">\\n                  <small [hidden]=\\\"cena.valid || (cena.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                    Cena po danu je obavezna (pozitivan broj).\\n                  </small>\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Broj putnika vozila</label>\\n                <input type=\\\"text\\\" #brojSedista=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"sediste\\\" name=\\\"sediste\\\" placeholder=\\\"Broj kreveta\\\" required [(ngModel)] = \\\"soba.brojKreveta\\\">\\n                <small [hidden]=\\\"brojSedista.valid || (brojSedista.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Broj kreveta je obavezan (pozitivan broj).\\n                </small>\\n              </div>\\n               \\n              <div *ngIf=\\\"isDataAvailable\\\">\\n                <button type=\\\"button\\\" [disabled]=\\\"!formVozilo.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n              </div>\\n              <div *ngIf=\\\"!isDataAvailable\\\">\\n                <button type=\\\"button\\\" [disabled]=\\\"!formVozilo.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"create()\\\">Dodaj</button>\\n              </div>\\n              <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.html\n// module id = ./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Soba } from 'app/model/hotel/soba';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SobaService } from 'app/service/hotel/soba.service';\n\n@Component({\n  selector: 'app-azuriranje-soba',\n  templateUrl: './azuriranje-soba.component.html',\n  styleUrls: ['./azuriranje-soba.component.css']\n})\nexport class AzuriranjeSobaComponent implements OnInit {\n\n  id: number; //id sobe\n  idGaraze: number;\n  idKompanija: number;\n\n  soba: Soba = new Soba();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n\n  constructor(private sobaService :SobaService, private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      this.idKompanija = +params['hotel-id'];\n      //this.idGaraze = +params['garaza-id'];\n      if(params['soba-id'] != null){\n        this.id = +params['soba-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa  \n        if(this.id != null)\n        {\n          this.sobaService.findOne(this.idKompanija, this.id).subscribe(\n            e => {\n              this.soba = e;\n            }\n          )\n\n          this.isDataAvailable = true;\n        }\n        else{\n          //znaci dodajem novi koji ne postoji\n          this.soba = new Soba();\n          this.isDataAvailable = false;\n        }\n     }\n   });\n  }\n\n  create(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\"){\n      this.sobaService.add(this.idKompanija, this.soba).subscribe(\n        s => {\n          this.soba = s;\n          this.router.navigate(['hoteli/' + this.idKompanija  + '/sobe']);\n        },\n        err=> console.log(\"err\")\n      );    \n    }\n    else{\n      alert(message)\n    }\n  }\n\n  update(){\n    let message: string = this.proveriUnos();\n    if(message === \"OK\")\n    {\n      this.sobaService.update(this.idKompanija, this.soba.id, this.soba).subscribe(\n        s => {\n          this.soba = s;\n          this.router.navigate(['hoteli/' + this.idKompanija  + '/sobe']);\n        },\n        err => \n        {\n          console.log(\"err\")\n           if( err.status === 418){  // i'm a teapot znaci vec je izmenjeno od strane drugog admina\n            alert(\"Nije moguce izmeniti zeljenu sobu vec je izmenjeno od strane drugog admina.\")\n            }\n        }\n      );    \n    }\n    else{\n      alert(message)\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['hoteli/' + this.idKompanija  + '/sobe']);\n  }\n\n  proveriUnos(): string{\n\n    if(this.soba.tip === \"\" || this.soba.tip.length > this.maksimalnaDuzina){\n      return \"Morate popuniti tip koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.soba.cenaPoDanu <= 0){\n      return \"Morate popuniti cenu  po danu koja mora biti pozitivan broj\";\n    }\n\n    if(this.soba.sprat <= 0){\n      return \"Morate popuniti sprat koja mora biti pozitivan broj\";\n    }\n\n    if(this.soba.brojKreveta <= 0){\n      return \"Morate popuniti broj kreveta koja mora biti pozitivan broj\";\n    }\n\n    return \"OK\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/azuriranje-soba/azuriranje-soba.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.css\n// module id = ./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n      </div>\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n          <div class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let cenovnik of cenovnici | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                  <div class=\\\"media col-md-3\\\">\\n                      <figure class=\\\"pull-left\\\">\\n                          <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/cenovnik.jpg\\\" alt=\\\"placehold.it/350x250\\\" >\\n                      </figure>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                      <h4 class=\\\"list-group-item-text\\\">Pocetni Datum: {{cenovnik.pocetniDatum}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Krajnji Datum: {{cenovnik.krajnjiDatum}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Cena: {{cenovnik.cena}}</h4>\\n                  </div>\\n                  <div class=\\\"col-md-3 text-center centered-button\\\" style=\\\"vertical-align: middle;\\\">\\n                      <button *ngIf=\\\"obrisiVoziloVidljivo(cenovnik)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"delete(cenovnik.id)\\\">Obrisi</button>\\n                      <button *ngIf=\\\"azurirajVoziloVidljivo(cenovnik)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"update(cenovnik.id)\\\">Izmeni</button>\\n                  </div>\\n            </a>\\n          </div>\\n      <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.html\n// module id = ./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CenovnikSobe } from 'app/model/hotel/cenovnikSobe';\nimport { CenovnikService } from 'app/service/hotel/cenovnik.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'app/auth.service';\n\n@Component({\n  selector: 'app-prikaz-cenovnika',\n  templateUrl: './prikaz-cenovnika.component.html',\n  styleUrls: ['./prikaz-cenovnika.component.css']\n})\nexport class PrikazCenovnikaComponent implements OnInit {\n\n  constructor(private cenovnikService: CenovnikService, private router: Router, private route: ActivatedRoute,  \n    private authService: AuthService) {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n  }\n\n  id: number; //hotel-id\n  sobaId: number;\n  public cenovnici: CenovnikSobe[] = [];\n  private sub: any;\n  isDataAvailable: boolean;\n  public tipkorisnika: string;\n  dropdownSettings = {};\n  tipoviVozila: string[];\n  mestaFilijala: string[];\n  public min = new Date();\n  idRezervacije: number = 0;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['hotel-id'] != null){\n        this.id = +params['hotel-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        this.sobaId = +params['soba-id'];\n        if(this.id != null )\n        {\n          /*this.voziloService.findVozilaForRent(this.id).subscribe(\n            e => \n            {\n              this.vozila = e;\n            }\n          )*/\n          this.getAll();\n          }\n        }\n      }\n      );\n    }\n\n\n\n  getAll(){\n    this.cenovnikService.findAll(this.id, this.sobaId).subscribe(\n      s => { this.cenovnici = s; }\n    );\n  }\n\n  update(id: number){\n    this.router.navigate(['hoteli/' + this.id + '/sobe/' + this.sobaId + '/cenovnici/add/' + id]);\n   }\n\n   delete(id: number){\n    this.cenovnikService.delete(this.id, this.sobaId, id).subscribe(\n      s => this.getAll(),\n      err=> console.log(\"err\")\n    );    \n   }\n\n  obrisiVoziloVidljivo(vozilo: CenovnikSobe){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  azurirajVoziloVidljivo(vozilo: CenovnikSobe){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false;\n    return true;\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/prikaz-cenovnika/prikaz-cenovnika.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.css\n// module id = ./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div *ngIf = \\\"vidjivoBrzeRezervacije()\\\" class=\\\"col-md-8 col-sm-offset-4 brzaRezervacija\\\">\\n        <img style=\\\"max-width: 100%; height: 200px;\\\" class=\\\"img-fluid\\\" (click) = \\\"brzaRezervacija()\\\" src=\\\"assets/hotel/SALE.jpg\\\"/>\\n    </div>\\n  <!-- <div class=\\\"col-md-8 col-sm-offset-2\\\" style=\\\"margin-bottom: 15px;\\\">\\n        <form class=\\\"md-form mr-auto mb-4\\\">\\n                <table class=\\\"table table-striped\\\">\\n            <tbody>\\n                <tr>\\n                    <td>\\n                        <label>Adresa servisa</label>\\n                    <ng-multiselect-dropdown [placeholder]=\\\"'Adresa'\\\" [data]=\\\"adreseRenta\\\" [(ngModel)]=\\\"izabranaAdresa\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </ng-multiselect-dropdown>\\n                </td>\\n                <td>\\n                    <label>Naziv servisa</label>\\n                    <ng-multiselect-dropdown [placeholder]=\\\"'Naziv'\\\" [data]=\\\"naziviRenta\\\" [(ngModel)]=\\\"izabraniNaziv\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </ng-multiselect-dropdown>\\n                </td>\\n                <td>\\n                        <input class=\\\"form-control mr-sm-2\\\" style=\\\"margin-top:24px;\\\" type=\\\"button\\\" value=\\\"Trazi\\\" aria-label=\\\"Search\\\" (click) = \\\"trazi()\\\">\\n                </td>\\n            </tr>\\n    </table>\\n      </form>\\n  </div> -->\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n          <div class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let hotel of hoteli | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                  <div class=\\\"media col-md-3\\\">\\n                      <figure class=\\\"pull-left\\\">\\n                          <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/hotel.jpg\\\" alt=\\\"placehold.it/350x250\\\" (click)=\\\"viewDetails(hotel.id)\\\">\\n                      </figure>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <a (click)=\\\"getAllSort('naziv')\\\">{{hotel.naziv}} </a>\\n                    <a (click)=\\\"getAllSort('adresa')\\\"> <small><i>{{hotel.adresaDTO.zemlja}}</i></small> <small><i>{{hotel.adresaDTO.grad}}</i></small> \\n                      <small><i>{{hotel.adresaDTO.ulica}}</i></small> <small><i>{{hotel.adresaDTO.broj}}</i></small></a>\\n                    <span class=\\\"glyphicon glyphicon-map-marker\\\" (click) = \\\"pokaziMapu(hotel.longitude, hotel.latitude)\\\" ></span>\\n                    <p class=\\\"group inner list-group-item-text\\\">\\n                      {{hotel.opis}}</p>\\n                  </div>\\n                  <div *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaBrise()\\\" class=\\\"col-md-2\\\" style=\\\"margin-top: 5px; padding: 0px;\\\">\\n                    <span class=\\\"glyphicon glyphicon-trash\\\" (click) = \\\"delete(hotel.id)\\\"></span>\\n                </div>\\n                <div *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" class=\\\"col-md-2\\\" style=\\\"margin-top: 5px; padding: 0px;\\\">\\n                    <span class=\\\"glyphicon glyphicon-wrench\\\" (click) = \\\"update(hotel.id)\\\"></span>\\n                </div>\\n                <button *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" (click) = \\\"createOption(hotel.id)\\\" >Kreiraj Opciju\\n                </button>\\n                <button *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" (click) = \\\"createRoom(hotel.id)\\\" >Kreiraj Sobu\\n                  </button>\\n                  <button *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" (click) = \\\"viewOption(hotel.id)\\\" >Vidi Opcije\\n                    </button>\\n            </a>\\n          </div>\\n          \\n      <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.html\n// module id = ./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Hotel } from 'app/model/hotel/hotel';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { AuthService } from 'app/auth.service';\nimport { HotelService } from 'app/service/hotel/hotel.service';\n\n@Component({\n  selector: 'app-prikaz-hotela',\n  templateUrl: './prikaz-hotela.component.html',\n  styleUrls: ['./prikaz-hotela.component.css']\n})\nexport class PrikazHotelaComponent implements OnInit {\n\n  public hoteli: Hotel[] = [];\n  public tipkorisnika: string;\n  adreseRenta: string[] = [];\n  pomAdreseRenta: string[] = [];\n  naziviRenta: string[] = [];\n  dropdownSettings = {};\n  izabranaAdresa: string = \"\";\n  izabraniNaziv: string = \"\";\n  paramDir: string = \"ASC\";\n  ocenjiviRentovi: number[];\n  prihod: number;\n  idRezervacije: number = 0;\n  idFilijala: number = 0;\n\n  constructor(private route: ActivatedRoute, private hotelService : HotelService, private router: Router, private authService: AuthService\n   ) \n   {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n    this.getAll();\n  }\n\n  ngOnInit() {\n\n    this.hotelService.vratiSveAdrese().subscribe(\n      s => \n      {\n       s.forEach(item => {\n          let temp: string = item.zemlja + \" \" + item.grad + \" \" + item.ulica + \" \" + item.broj;\n          this.pomAdreseRenta.push(temp);\n        }); \n\n        this.adreseRenta = this.pomAdreseRenta;\n      }\n    )\n\n    this.hotelService.vratiSveNazive().subscribe(\n      a => \n      {\n        this.naziviRenta = a;\n      }\n    )\n\n\n    this.dropdownSettings = {\n      singleSelection: true,\n      // idField: 'id',\n      //textField: 'adreseRenta',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n\n   /* this.route.queryParams.subscribe(params => {\n      if(params[\"idRezervacije\"] !== undefined){\n        this.idRezervacije = params[\"idRezervacije\"];\n      }\n    });*/\n  }\n\n  getAll(){\n    /*if(this.tipkorisnika !== \"nema_korisnika\"){\n      this.rentacarService.vratiListuOcenjivihServisa().subscribe(\n        a => \n        {\n          this.ocenjiviRentovi = a;\n          this.rentacarService.findAll().subscribe(\n        \n            s => { \n              this.rentacarovi = s;  \n            }\n          );\n        }\n      );\n    }*/\n    //else{\n      this.hotelService.findAll().subscribe(\n        \n        s => { \n          this.hoteli = s;\n        }\n      );\n   // }\n  }\n\n  delete(id: number){\n    this.hotelService.delete(id).subscribe(\n      s => this.getAll(),\n      err=> console.log(\"err\")\n    );    \n   }\n \n   update(id: number){\n    this.router.navigate(['hoteli/add', id]);\n   }\n\n   postaviFilijalu(id: number){\n    this.idFilijala = id;\n   }\n\n   viewDetails(id: number){\n     //if(this.idFilijala != 0){\n      this.router.navigate(['hoteli/' + id + '/sobe']);\n     /*}\n     else{\n       alert('izaberi filjalu');\n     }*/\n    \n  }\n\n  createRoom(id: number){\n    this.router.navigate(['hoteli/' + id + '/sobe/add']);\n  }\n\n  createOption(id: number){\n    this.router.navigate(['hoteli/' + id + '/opcije/add']);\n  }\n\n  viewOption(id: number){\n    this.router.navigate(['hoteli/' + id + '/opcije']);\n  }\n\n  imageClick(id: number){\n    /*if(this.idRezervacije !== 0){\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n            \"idRezervacije\" : this.idRezervacije\n        }\n      };\n      this.router.navigate(['rentacarovi/' +  id + '/prikazVozila'], navigationExtras);\n    }\n    else {\n      this.router.navigate(['rentacarovi/' +  id + '/prikazVozila']);\n    }*/\n  }\n\n  spanClick(id: number){\n    //this.router.navigate(['rentacarovi/' +  id + '/prikazFilijala']);\n  }\n\n  ulogovaniKorisnikImaDozvoluDaMenja(){\n    /*if( this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\" || this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n      return true;\n    }\n    return false; */\n    return true;\n  }\n\n  ulogovaniKorisnikImaDozvoluDaBrise(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  rezervisiDugme(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n      return true;\n    }\n    return false; \n  }\n\n  ocenaVidljivo(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n      return true;\n    }\n    return false; \n  }\n\n  trazi(){\n    // this.rentacarService.trazenjeRentacarova(this.izabraniNaziv, this.izabranaAdresa).subscribe(\n    //   s => {\n    //     this.rentacarovi = s;\n    //   },\n    //   err=> console.log(\"err\")\n    // );    \n  }\n\n  getAllSort(paramSort: string){\n    this.hotelService.findAllSort(paramSort, this.paramDir).subscribe(\n      ss => { this.hoteli = ss; }\n    );\n    if (this.paramDir === 'ASC'){\n      this.paramDir = 'DESC';\n    } else {\n      this.paramDir = 'ASC';\n    }\n  }\n\n  brzaRezervacija(){\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n          \"idRezervacije\" : this.idRezervacije\n      }\n    };\n    this.router.navigate(['rentacarovi/brzaRezervacijaVozila'], navigationExtras);\n  }\n\n  daLiSmeDaOceni(id: number): boolean{\n    if(this.ocenjiviRentovi.indexOf(id) > -1 ) {\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  oceniServis(rentacar: Hotel){\n    /*if(rentacar.ulogovanogKorisnikaOcena > 0){\n      let ocena: OcenaRenta = new OcenaRenta();\n      ocena.rentACar = rentacar;\n      ocena.ocenaRenta = rentacar.ulogovanogKorisnikaOcena;\n      this.rentacarService.oceniServis(1, ocena).subscribe(\n        ajde => \n        {\n        }\n      )\n    }*/\n  }\n\n  pokaziMapu(longitude : number, latitude: number){\n    //this.router.navigate(['prikaziMapu/' + longitude + \"/\" + latitude]);\n  }\n\n  vidjivoBrzeRezervacije(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" && this.idRezervacije !== 0){\n      return true;\n    }\n    return false; \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/prikaz-hotela/prikaz-hotela.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.css\n// module id = ./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n      </div>\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n          <div class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let opcija of opcije | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                  <div class=\\\"media col-md-3\\\">\\n                      <figure class=\\\"pull-left\\\">\\n                          <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/opcija.jpg\\\" alt=\\\"placehold.it/350x250\\\" >\\n                      </figure>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                      <h4 class=\\\"list-group-item-text\\\">Naziv: {{opcija.naziv}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Cena: {{opcija.cena}}</h4>\\n                  </div>\\n                  <div class=\\\"col-md-3 text-center centered-button\\\" style=\\\"vertical-align: middle;\\\">\\n                      <button *ngIf=\\\"obrisiVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"delete(opcija.id)\\\">Obrisi</button>\\n                      <button *ngIf=\\\"azurirajVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"update(opcija.id)\\\">Izmeni</button>\\n                  </div>\\n            </a>\\n          </div>\\n      <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.html\n// module id = ./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Opcija } from 'app/model/hotel/opcija';\nimport { OpcijaService } from 'app/service/hotel/opcija.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'app/auth.service';\n\n@Component({\n  selector: 'app-prikaz-opcija',\n  templateUrl: './prikaz-opcija.component.html',\n  styleUrls: ['./prikaz-opcija.component.css']\n})\nexport class PrikazOpcijaComponent implements OnInit {\n\n  constructor(private opcijeService: OpcijaService, private router: Router, private route: ActivatedRoute,  \n    private authService: AuthService) {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n  }\n\n  id: number; //hotel-id\n  public opcije: Opcija[] = [];\n  private sub: any;\n  isDataAvailable: boolean;\n  public tipkorisnika: string;\n  dropdownSettings = {};\n  tipoviVozila: string[];\n  mestaFilijala: string[];\n  public min = new Date();\n  idRezervacije: number = 0;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['hotel-id'] != null){\n        this.id = +params['hotel-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          /*this.voziloService.findVozilaForRent(this.id).subscribe(\n            e => \n            {\n              this.vozila = e;\n            }\n          )*/\n          this.getAll();\n          }\n        }\n      }\n      );\n    }\n\n\n\n  getAll(){\n    this.opcijeService.findAll(this.id).subscribe(\n      s => { this.opcije = s; }\n    );\n  }\n\n  update(id: number){\n    this.router.navigate(['hoteli/' + this.id +  '/opcije/add/' + id]);\n   }\n\n   delete(id: number){\n    this.opcijeService.delete(this.id, id).subscribe(\n      s => this.getAll(),\n      err=> console.log(\"err\")\n    );    \n   }\n\n  obrisiVoziloVidljivo(vozilo: Opcija){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  azurirajVoziloVidljivo(vozilo: Opcija){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/prikaz-opcija/prikaz-opcija.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-soba/prikaz-soba.component.css\n// module id = ./src/app/component/hotel/prikaz-soba/prikaz-soba.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n            <button *ngIf=\\\"dodajAdminaVidljivo()\\\" style=\\\"width: auto; float: right;\\\" class=\\\"form-control mr-sm-5\\\" (click) = \\\"dodajAdministratora()\\\">Dodaj administratora hotela</button>\\n        <button *ngIf=\\\"dodajVoziloVidljivo()\\\" style=\\\"width: auto; float: right;\\\" class=\\\"form-control mr-sm-5\\\" (click) = \\\"izvestajPoslovanja()\\\">Izvestaj o poslovanju</button>\\n    </div>\\n  <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n        <div class=\\\"list-group\\\">\\n          <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let soba of sobe | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                <div class=\\\"media col-md-3\\\">\\n                    <figure class=\\\"pull-left\\\">\\n                        <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/soba.jpg\\\" alt=\\\"placehold.it/350x250\\\" (click)='prikaziCenovnike(soba.id)'>\\n                    </figure>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h3 class=\\\"list-group-item-text\\\">Tip: {{soba.tip}}</h3>\\n                    <h4 class=\\\"list-group-item-text\\\">Sprat: {{soba.sprat}}</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Broj kreveta: {{soba.brojKreveta}}</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Cena: {{soba.cenaPoDanu}}$</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Ocena: {{soba.prosecnaOcena}} <small> / </small> 5 </h4>\\n                </div>\\n                <!-- <div class=\\\"col-md-3 text-center centered\\\">\\n                    <button *ngIf=\\\"rezervisiDugme()\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click)=\\\"rezervisiVozilo(vozilo.id)\\\"> Rezervisi </button>\\n                </div> -->\\n                <div class=\\\"col-md-3 text-center centered-button\\\" style=\\\"vertical-align: middle;\\\">\\n                    <button *ngIf=\\\"obrisiVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"delete(soba)\\\">Obrisi</button>\\n                    <button *ngIf=\\\"azurirajVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"update(soba.id)\\\">Izmeni</button>\\n                    <button *ngIf=\\\"azurirajVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"createCenovnik(soba.id)\\\">Kreiraj cenovnik</button>\\n                </div>\\n          </a>\\n        </div>\\n\\n  </div>\\n  <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n        <ng5-slider [(value)]=\\\"minValue\\\" [(highValue)]=\\\"maxValue\\\" [options]=\\\"options\\\"></ng5-slider>\\n        <form class=\\\"md-form mr-auto mb-4\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tbody>\\n                    <tr>\\n                        <td>\\n                            <label> Pocetni Datum </label>\\n                            <input class=\\\"form-control mr-sm-2\\\" style=\\\"width: auto;\\\" placeholder=\\\"Date:\\\" \\n                                    [min]=\\\"min\\\"\\n                                    [(ngModel)]=\\\"rezervacijaSobe.pocetniDatum\\\"\\n                                    [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\n                          </td>\\n                          <td>\\n                            <label> krajnji Datum </label>\\n                            <input class=\\\"form-control mr-sm-2\\\" style=\\\"width: auto;\\\" placeholder=\\\"Date:\\\"\\n                                    [min]=\\\"min\\\" \\n                                    [(ngModel)]=\\\"rezervacijaSobe.krajnjiDatum\\\"\\n                                    [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\n                          </td>\\n                        <td>\\n                            <label>Broj gostiju</label> \\n                            <input class=\\\"form-control mr-sm-2\\\" style=\\\"width: auto;\\\" type=\\\"text\\\" placeholder=\\\"Broj gostiju\\\" aria-label=\\\"Search\\\" [(ngModel)] = \\\"rezervacijaSobe.brojGostiju\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </td>\\n                        <td>\\n                            <label>Tip sobe</label>\\n                            <ng-multiselect-dropdown [placeholder]=\\\"'Tip sobe'\\\" [data]=\\\"tipoviSoba\\\" [(ngModel)]=\\\"rezervacijaSobe.tipSobe\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                            </ng-multiselect-dropdown>\\n                        </td>\\n                        <td>\\n                            <input style=\\\"margin-top: 24px;\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"button\\\" value=\\\"Trazi\\\" aria-label=\\\"Search\\\" (click) = \\\"trazi()\\\">\\n                        </td>\\n                  </tr>\\n                </tbody>\\n            </table>\\n        </form>\\n        \\n    </div>\\n\\n    <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/hotel/prikaz-soba/prikaz-soba.component.html\n// module id = ./src/app/component/hotel/prikaz-soba/prikaz-soba.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'app/auth.service';\nimport { SobaService } from 'app/service/hotel/soba.service';\nimport { Soba } from 'app/model/hotel/soba';\nimport { ZakupSoba } from 'app/model/hotel/zakupSoba';\nimport { Options, LabelType } from 'ng5-slider';\nimport { Hotel } from 'app/model/hotel/hotel';\n\n@Component({\n  selector: 'app-prikaz-soba',\n  templateUrl: './prikaz-soba.component.html',\n  styleUrls: ['./prikaz-soba.component.css']\n})\nexport class PrikazSobaComponent implements OnInit {\n\n  constructor(private voziloService : SobaService,  private router: Router, private route: ActivatedRoute,  \n    private authService: AuthService) {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n  }\n\n  id: number; //hotel-id\n  public sobe: Soba[] = [];\n  private sub: any;\n  isDataAvailable: boolean;\n  public tipkorisnika: string;\n  public rezervacijaSobe: ZakupSoba = new ZakupSoba();\n  dropdownSettings = {};\n  tipoviVozila: string[];\n  mestaFilijala: string[];\n  public min = new Date();\n  idRezervacije: number = 0;\n\n  minValue: number = 100;\n  maxValue: number = 400;\n  options: Options = {\n    floor: this.minValue,\n    ceil: this.maxValue,\n    translate: (value: number, label: LabelType): string => {\n      switch (label) {\n        case LabelType.Low:\n          return '<b>Min price:</b> $' + value;\n        case LabelType.High:\n          return '<b>Max price:</b> $' + value;\n        default:\n          return '$' + value;\n      }\n    }\n  };\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['hotel-id'] != null){\n        this.id = +params['hotel-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        //this.garazaId = +params['garaza-id'];\n        if(this.id != null )\n        {\n          this.voziloService.findAll(this.id).subscribe(\n            e => \n            {\n              this.sobe = e;\n            }\n          )\n\n          /*this.voziloService.vratiSveTipove().subscribe(\n            s => \n            {\n              this.tipoviVozila = s;\n            }\n          )\n\n          this.filijalaService.vratiFilijaleForRent(this.id).subscribe(\n            a => \n            {\n              this.mestaFilijala = a;\n            }\n          )*/\n\n          this.dropdownSettings = {\n            singleSelection: true,\n            // idField: 'id',\n            // textField: 'tipoviVozila',\n            itemsShowLimit: 3,\n            allowSearchFilter: true\n          };\n\n          /*this.voziloService.minimalnaCenaVozila().subscribe(\n            succ => \n            {\n              this.minValue = succ;\n\n              this.voziloService.maksimalnaCenaVozila().subscribe(\n                success => \n                {\n                  this.maxValue = success;\n    \n                  this.options =  {\n                    floor: this.minValue,\n                    ceil: this.maxValue,\n                    translate: (value: number, label: LabelType): string => {\n                      switch (label) {\n                        case LabelType.Low:\n                          return '<b>Min price:</b> $' + value;\n                        case LabelType.High:\n                          return '<b>Max price:</b> $' + value;\n                        default:\n                          return '$' + value;\n                      }\n                    }\n                  };\n                }\n              )\n            }\n          ) */\n        }\n     }\n   });\n\n    // this.route.queryParams.subscribe(params => {\n    //   if(params[\"idRezervacije\"] !== undefined){\n    //     this.idRezervacije = params[\"idRezervacije\"];\n    //   }\n    // });\n  }\n\n  getAll(){\n    this.voziloService.findAll(this.id).subscribe(\n      s => { this.sobe = s; }\n    );\n  }\n\n  delete(vozilo: Soba){\n    this.voziloService.delete(this.id, vozilo.id).subscribe(\n      s => {\n        this.ngOnInit();\n        //this.router.navigate(['hoteli/' + soba.hotel.id + '/prikazSoba']);\n      },\n      err=> console.log(\"err\")\n    );    \n   }\n \n   update(id: number){\n    this.router.navigate(['hoteli/' + this.id +  '/sobe/add/' + id]);\n   }\n\n\n  add(id: number){ \n    this.router.navigate(['hoteli/' + this.id + '/sobe/add']);\n  }\n\n  // rezervisiDugme(){\n  //   if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" && this.idRezervacije !==0){\n  //     return true;\n  //   }\n  //   return false; \n  // }\n\n  obrisiVoziloVidljivo(vozilo: Hotel){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  azurirajVoziloVidljivo(vozilo: Hotel){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  dodajVoziloVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  dodajAdminaVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  ocenaVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  vidljivoPretraga(){\n    // if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" || this.tipkorisnika === \"nema_korisnika\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  prikaziCenovnike(sobaId: number){\n    this.router.navigate(['hoteli/' + this.id + '/sobe/' + sobaId + '/cenovnici']);\n  }\n\n  createCenovnik(sobaId: number){\n    this.router.navigate(['hoteli/' + this.id + '/sobe/' + sobaId + '/cenovnici/add']);\n  }\n\n  trazi(){\n    /*let rezervacija = new RezervacijaVozila()\n    if(this.proveriRezervaciju())\n    {\n      rezervacija.datumPreuzimanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumPreuzimanja.toString().substring(4,15));\n      rezervacija.datumVracanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumVracanja.toString().substring(4,15));\n      rezervacija.tipVozila = this.rezervacijaVozila.tipVozila.toString();\n      rezervacija.mestoPreuzimanja = this.rezervacijaVozila.mestoPreuzimanja.toString();\n      rezervacija.mestoVracanja = this.rezervacijaVozila.mestoVracanja.toString();\n      rezervacija.brojPutnika = this.rezervacijaVozila.brojPutnika;\n      rezervacija.minimalnaCena = this.minValue;\n      rezervacija.maksimalnaCena = this.maxValue;\n      this.voziloService.traziVozilo(rezervacija, this.id).subscribe(\n        s => {\n          this.vozila = s;\n        },\n        err=> console.log(\"err\")\n      );    \n      }\n      else{\n        alert(\"morate uneti datum preuzimanja i vracanja, mesto preuzimanja i broj putnika veci od 0\");\n      }*/\n  }\n\n  konvertujUDobroVreme(primljeniString: string): string{\n    let pravoVreme: string;\n    pravoVreme = primljeniString.substring(7,11) + \"/\" + primljeniString.substring(0,3) + \"/\" + primljeniString.substring(4,6);\n    pravoVreme = this.mesecPrebaciUbroj(pravoVreme); \n    //alert(pravoVreme)\n    return pravoVreme;\n  }\n\n  mesecPrebaciUbroj(primljeniString: string): string{\n    primljeniString = primljeniString.replace(\"Jan\", \"01\");\n    primljeniString = primljeniString.replace(\"Feb\", \"02\");\n    primljeniString = primljeniString.replace(\"Mar\", \"03\");\n    primljeniString = primljeniString.replace(\"Apr\", \"04\");\n    primljeniString = primljeniString.replace(\"May\", \"05\");\n    primljeniString = primljeniString.replace(\"Jun\", \"06\");\n    primljeniString = primljeniString.replace(\"Jul\", \"07\");\n    primljeniString = primljeniString.replace(\"Aug\", \"08\");\n    primljeniString = primljeniString.replace(\"Sep\", \"09\");\n    primljeniString = primljeniString.replace(\"Oct\", \"10\");\n    primljeniString = primljeniString.replace(\"Nov\", \"11\");\n    primljeniString = primljeniString.replace(\"Dec\", \"12\");\n\n    return primljeniString;\n    \n  }\n\n  proveriRezervaciju(): boolean{\n    /*if(this.rezervacijaVozila.datumPreuzimanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.datumVracanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.mestoPreuzimanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.brojPutnika <= 0)\n      return false;\n    if(this.rezervacijaVozila.datumPreuzimanja > this.rezervacijaVozila.datumVracanja)\n      return false;\n*/\n    return true;\n  }\n\n  rezervisiVozilo(idVozila: number){\n      //alert(idVozila)\n    /*let rezervacija = new RezervacijaVozila()\n    if(this.proveriRezervaciju())\n    {\n      rezervacija.datumPreuzimanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumPreuzimanja.toString().substring(4,15));\n      rezervacija.datumVracanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumVracanja.toString().substring(4,15));\n      rezervacija.tipVozila = this.rezervacijaVozila.tipVozila.toString();\n      rezervacija.mestoPreuzimanja = this.rezervacijaVozila.mestoPreuzimanja.toString();\n      rezervacija.mestoVracanja = this.rezervacijaVozila.mestoVracanja.toString();\n      rezervacija.brojPutnika = this.rezervacijaVozila.brojPutnika;\n      rezervacija.vozilo.id = idVozila;\n      rezervacija.minimalnaCena = this.minValue;\n      rezervacija.maksimalnaCena = this.maxValue;\n\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n            \"datumPreuzimanja\": rezervacija.datumPreuzimanja,\n            \"datumVracanja\": rezervacija.datumVracanja,\n            \"brojPutnika\" : rezervacija.brojPutnika,\n            \"mestoPreuzimanja\" : rezervacija.mestoPreuzimanja,\n            \"mestoVracanja\" : rezervacija.mestoVracanja,\n            \"idRezervacije\" : this.idRezervacije,\n            \n        }\n    };\n        this.router.navigate(['/rentacarovi/' + idVozila + '/potvrdiRezervaciju'], navigationExtras);\n\n    }\n    else{\n      alert(\"morate uneti datum preuzimanja i vracanja, datum preuzimanja mora biti pre datuma vracanja, mesto preuzimanja i broj putnika veci od 0\");\n    }*/\n  }\n\n  /*dodajAdministratora(){\n    this.router.navigate(['registracija/dodavanjeAdministratora/2']);\n  }\n\n  izvestajPoslovanja(){\n    this.router.navigate(['rentacarovi/' + this.id +  '/izvestaj']);\n  }*/\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/hotel/prikaz-soba/prikaz-soba.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/obavestenja/page-not-found/page-not-found.component.css\n// module id = ./src/app/component/obavestenja/page-not-found/page-not-found.component.css\n// module chunks = main","module.exports = \"<p>\\n  page-not-found works! RADI NESTO\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/obavestenja/page-not-found/page-not-found.component.html\n// module id = ./src/app/component/obavestenja/page-not-found/page-not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/obavestenja/page-not-found/page-not-found.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.css\n// module id = ./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\" #formFilijala=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje filijale</h3>\\n                <div class=\\\"form-group\\\">\\n                <label>Ime filijale</label>\\n                <input type=\\\"text\\\"  [readonly] = true class=\\\"form-control\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #ime=\\\"ngModel\\\" id=\\\"ime\\\" name=\\\"ime\\\" placeholder=\\\"Ime filijale\\\" required [(ngModel)] = \\\"filijala.kompanijaDTO.naziv\\\">\\n                <small [hidden]=\\\"ime.valid || (ime.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Ime je obavezno (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                    <label>Zemlja</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zemlja\\\" name=\\\"zemlja\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #zemlja=\\\"ngModel\\\" placeholder=\\\"zemlja\\\" required [(ngModel)] = \\\"filijala.adresaDTO.zemlja\\\">\\n                  <small [hidden]=\\\"zemlja.valid || (zemlja.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Zemlja je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n                  </small>\\n                 </div>\\n               <div class=\\\"form-group\\\">\\n                    <label>Grad</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"grad\\\" name=\\\"grad\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #grad=\\\"ngModel\\\" placeholder=\\\"grad\\\" required [(ngModel)] = \\\"filijala.adresaDTO.grad\\\">\\n                  <small [hidden]=\\\"grad.valid || (grad.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Grad je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                  </small>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Ulica</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #ulica=\\\"ngModel\\\" placeholder=\\\"ulica\\\" required [(ngModel)] = \\\"filijala.adresaDTO.ulica\\\">\\n                  <small [hidden]=\\\"ulica.valid || (ulica.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Ulica je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n                  </small>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Broj</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"broj\\\" name=\\\"broj\\\" minlength=\\\"1\\\"  #broj=\\\"ngModel\\\" placeholder=\\\"broj\\\" required [(ngModel)] = \\\"filijala.adresaDTO.broj\\\">\\n                  <small [hidden]=\\\"broj.valid || (broj.pristine && !formFilijala.submitted)\\\" class=\\\"text-danger\\\">\\n                    Broj je obavezan (Veci od 0).\\n                  </small>  \\n                </div>\\n              <button *ngIf=\\\"isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n              <button *ngIf=\\\"!isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formFilijala.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"save()\\\">Kreiraj</button>\\n              \\n              <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.html\n// module id = ./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Garaza } from 'app/model/vozila/garaza';\nimport { GarazaService } from 'app/service/vozila/garaza.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KompanijaVozilaService } from 'app/service/vozila/kompanija-vozila.service';\n\n@Component({\n  selector: 'app-azuriranje-garaze',\n  templateUrl: './azuriranje-garaze.component.html',\n  styleUrls: ['./azuriranje-garaze.component.css']\n})\nexport class AzuriranjeGarazeComponent implements OnInit {\n\n  id: number; //garaza-id\n  kompanijaId: number;\n  filijala: Garaza = new Garaza();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n\n  constructor(private filijalaService :GarazaService, private kompanijaService :KompanijaVozilaService, private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      this.kompanijaId = +params['kompanija-id'];\n      if(params['garaza-id'] != null){\n        this.id = +params['garaza-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          this.filijalaService.findOne(this.kompanijaId, this.id).subscribe(\n            e => {\n              this.filijala = e;\n              \n            }\n          )\n          this.isDataAvailable = true;\n        }\n        else{\n          this.isDataAvailable = false;\n          this.filijala = new Garaza();\n        }\n     }\n     else{\n      this.isDataAvailable = false;\n      this.filijala = new Garaza();\n\n      this.kompanijaService.findOne(this.kompanijaId).subscribe(\n        succ => {\n          this.filijala.kompanijaDTO = succ;\n        }\n      );\n    }\n   });\n  }\n\n  save(){\n    let message: string = this.proveriUnosFilijala();\n    if(message === \"OK\"){\n      this.filijalaService.addFilijala(this.filijala, this.kompanijaId).subscribe(\n        s => {\n          this.filijala = s;\n          this.router.navigate(['kompanije-vozila/' + this.kompanijaId + '/garaze']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  update(){\n    let message: string = this.proveriUnosFilijala();\n    if(message === \"OK\"){\n      this.filijalaService.update(this.kompanijaId, this.filijala).subscribe(\n        s => {\n         this.filijala = s;\n         this.router.navigate(['kompanije-vozila/' + this.kompanijaId + '/garaze']);\n        },\n        err=> console.log(\"err\")\n      );\n    }\n    else{\n      alert(message);\n    }    \n  }\n\n  goBack(){\n    this.router.navigate(['kompanije-vozila/' + this.kompanijaId + '/garaze']);\n  }\n\n  proveriUnosFilijala(): string{\n    /*if(this.filijala.ime === \"\" || this.filijala.ime.length > this.maksimalnaDuzina){\n      return \"Morate popuniti ime filijale koje mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.filijala.adresa === \"\" || this.filijala.adresa.length > this.maksimalnaDuzina){\n      return \"Morate popuniti adresu filijale koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }*/\n\n    return \"OK\"\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/azuriranje-garaze/azuriranje-garaze.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.css\n// module id = ./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n  <div class=\\\"col-md-5 form\\\">\\n      <div class=\\\"form-area\\\">  \\n          <form role=\\\"form\\\" #formRent=\\\"ngForm\\\">\\n          <br style=\\\"clear:both\\\">\\n                      <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje Servisa</h3>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"naziv\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #naziv=\\\"ngModel\\\" name=\\\"naziv\\\" placeholder=\\\"Naziv rentacara\\\" required [(ngModel)] = \\\"rentacar.naziv\\\">\\n                <small [hidden]=\\\"naziv.valid || (naziv.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                  Naziv je obavezan(minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n            </div>\\n             <div class=\\\"form-group\\\">\\n                <label>Zemlja</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zemlja\\\" name=\\\"zemlja\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #zemlja=\\\"ngModel\\\" placeholder=\\\"zemlja\\\" required [(ngModel)] = \\\"rentacar.adresa.zemlja\\\">\\n              <small [hidden]=\\\"zemlja.valid || (zemlja.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Zemlja je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n              </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Grad</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"grad\\\" name=\\\"grad\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #grad=\\\"ngModel\\\" placeholder=\\\"grad\\\" required [(ngModel)] = \\\"rentacar.adresa.grad\\\">\\n              <small [hidden]=\\\"grad.valid || (grad.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Grad je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n              </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Ulica</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ulica\\\" name=\\\"ulica\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" #ulica=\\\"ngModel\\\" placeholder=\\\"ulica\\\" required [(ngModel)] = \\\"rentacar.adresa.ulica\\\">\\n              <small [hidden]=\\\"ulica.valid || (ulica.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Ulica je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n              </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Broj</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"broj\\\" name=\\\"broj\\\" minlength=\\\"1\\\"  #broj=\\\"ngModel\\\" placeholder=\\\"broj\\\" required [(ngModel)] = \\\"rentacar.adresa.broj\\\">\\n              <small [hidden]=\\\"broj.valid || (broj.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Broj je obavezan (Veci od 0).\\n              </small> \\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Geografska duzina</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" id=\\\"duzina\\\" name=\\\"duzina\\\" #duzina = \\\"ngModel\\\" placeholder=\\\"Geografska duzina\\\" required [(ngModel)] = \\\"rentacar.longitude\\\">\\n            <small [hidden]=\\\"duzina.valid || (duzina.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n              Geografska duzina je obavezna (minimum 1 karaktera a maksimum 30 karaktera).\\n            </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Geografska sirina</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"30\\\" id=\\\"sirina\\\" name=\\\"sirina\\\" #sirina = \\\"ngModel\\\" placeholder=\\\"Geografska sirina\\\" required [(ngModel)] = \\\"rentacar.latitude\\\">\\n              <small [hidden]=\\\"sirina.valid || (sirina.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Geografska sirina je obavezna (minimum 1 karaktera a maksimum 30 karaktera).\\n              </small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <textarea [(ngModel)] = \\\"rentacar.opis\\\" maxlength=\\\"140\\\" #opis=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" type=\\\"textarea\\\" id=\\\"promotivniOpis\\\" placeholder=\\\"Promotivni opis\\\" maxlength=\\\"140\\\" rows=\\\"7\\\" style=\\\"max-width: 100%; min-width: 100%;\\\" ></textarea>\\n              <span class=\\\"help-block\\\"><p id=\\\"characterLeft\\\" class=\\\"help-block \\\">Maksimum 140 karaktera</p></span>                    \\n              <small [hidden]=\\\"opis.valid || (opis.pristine && !formRent.submitted)\\\" class=\\\"text-danger\\\">\\n                Promotivni opis je obavezan (minimum 3 karaktera a maksimum 140 karaktera).\\n              </small>\\n            </div>\\n              \\n          <button *ngIf=\\\"isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formRent.valid\\\" id=\\\"submit\\\" style=\\\"margin:5px;\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n          <button *ngIf=\\\"!isDataAvailable\\\" type=\\\"button\\\" [disabled]=\\\"!formRent.valid\\\" id=\\\"submit\\\" style=\\\"margin:5px;\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"save()\\\">Kreiraj</button>\\n          <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" style=\\\"margin:5px;\\\" class=\\\"btn btn-primary pull-right\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n          </form>\\n      </div>\\n  </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.html\n// module id = ./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { KompanijaVozila } from 'app/model/vozila/kompanijaVozila';\nimport { KompanijaVozilaService } from 'app/service/vozila/kompanija-vozila.service';\n\n@Component({\n  selector: 'app-azuriranje-kompanije-vozila',\n  templateUrl: './azuriranje-kompanije-vozila.component.html',\n  styleUrls: ['./azuriranje-kompanije-vozila.component.css']\n})\nexport class AzuriranjeKompanijeVozilaComponent implements OnInit {\n\n  \n  id: number;\n\n  rentacar: KompanijaVozila = new KompanijaVozila();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n  maksimalnaDuzinaOpis: number = 140;\n\n  constructor(private rentacarService :KompanijaVozilaService, private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['id'] != null){\n        this.id = +params['id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          this.rentacarService.findOne(this.id).subscribe(\n            e => {\n              this.rentacar = e;\n            }\n          )\n        \n          this.isDataAvailable = true;\n        }\n        else{\n          //znaci dodajem novi koji ne postoji\n          this.rentacar = new KompanijaVozila();\n          this.isDataAvailable = false;\n        }\n     }\n   });\n  }\n\n  save(){\n    let message: string = this.proveriUnosRentacar();\n    if(message === \"OK\"){\n      this.rentacarService.addRentACar(this.rentacar).subscribe(\n        s => {\n          this.rentacar = s;\n          this.router.navigate(['kompanije-vozila']);\n        },\n        err=> console.log(\"err\")\n      );\n    } \n    else{\n      alert(message);\n    }   \n  }\n\n  update(){\n    let message: string = this.proveriUnosRentacar();\n    if(message === \"OK\"){\n      this.rentacarService.updateRentACar(this.rentacar.id, this.rentacar).subscribe(\n        s => {\n          this.rentacar = s;\n          \n          this.router.navigate(['kompanije-vozila']);\n        },\n        err=> console.log(\"err\")\n      );    \n    }\n    else{\n      alert(message);\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['kompanije-vozila']);\n  }\n\n  proveriUnosRentacar(): string{\n    if(this.rentacar.naziv === \"\" || this.rentacar.naziv.length > this.maksimalnaDuzina){\n      return \"Morate popuniti naziv rent-a koja mora biti kraci od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    /*if(this.rentacar.adresa === \"\" ||this.rentacar.adresa.length > this.maksimalnaDuzina){\n      return \"Morate popuniti adresu rent-a koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }*/\n\n    if(this.rentacar.opis === \"\" || this.rentacar.opis.length > this.maksimalnaDuzinaOpis){\n      return \"Morate popuniti opis rent-a koji mora biti kraca od \" + this.maksimalnaDuzinaOpis + \" karaktera\";\n    }\n    if(isNaN(this.rentacar.latitude) || isNaN(this.rentacar.longitude)){\n      return \"Geografska sirina i duzina moraju biti brojevi\";\n    }\n    return \"OK\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/azuriranje-kompanije-vozila/azuriranje-kompanije-vozila.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.css\n// module id = ./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"display: flex; justify-content: center;\\\">\\n    <div class=\\\"col-md-5 form\\\">\\n        <div class=\\\"form-area\\\">  \\n            <form role=\\\"form\\\"  #formVozilo=\\\"ngForm\\\">\\n            <br style=\\\"clear:both\\\">\\n                        <h3 style=\\\"margin-bottom: 25px; text-align: center;\\\">Azuriranje/Dodavanje vozila</h3>\\n                <div class=\\\"form-group\\\">\\n                <label>Marka vozila</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"3\\\"  maxlength=\\\"30\\\" #marka=\\\"ngModel\\\" id=\\\"marka\\\" name=\\\"marka\\\" placeholder=\\\"Marka vozila\\\" required [(ngModel)] = \\\"vozilo.marka\\\">\\n                <small [hidden]=\\\"marka.valid || (marka.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Marka je obavezna (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Model vozila</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"3\\\"  maxlength=\\\"30\\\" #model=\\\"ngModel\\\" id=\\\"model\\\" name=\\\"model\\\" placeholder=\\\"Model vozila\\\" required [(ngModel)] = \\\"vozilo.model\\\">\\n                <small [hidden]=\\\"model.valid || (model.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Model je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Naziv vozila</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" minlength=\\\"3\\\"  maxlength=\\\"30\\\" #naziv=\\\"ngModel\\\" id=\\\"model\\\" name=\\\"model\\\" placeholder=\\\"Naziv vozila\\\" required [(ngModel)] = \\\"vozilo.naziv\\\">\\n                  <small [hidden]=\\\"naziv.valid || (naziv.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                    Naziv je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                  </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Tip vozila</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"  minlength=\\\"3\\\"  maxlength=\\\"30\\\" #tip=\\\"ngModel\\\" id=\\\"tip\\\" name=\\\"tip\\\" placeholder=\\\"Tip vozila\\\" required [(ngModel)] = \\\"vozilo.tip\\\">\\n                <small [hidden]=\\\"tip.valid || (tip.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Tip je obavezan (minimum 3 karaktera a maksimum 30 karaktera).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>Cena vozila</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\"  #cena=\\\"ngModel\\\" id=\\\"cena\\\" name=\\\"cena\\\" placeholder=\\\"Cena po danu vozila\\\" required [(ngModel)] = \\\"vozilo.cenaPoDanu\\\">\\n                  <small [hidden]=\\\"cena.valid || (cena.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                    Cena po danu je obavezna (pozitivan broj).\\n                  </small>\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Godina prozivodnje vozila</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" #godina=\\\"ngModel\\\" id=\\\"godinaProizvodnje\\\" name=\\\"godinaProizvodnje\\\" placeholder=\\\"Godina proizvodnje vozila\\\" required [(ngModel)] = \\\"vozilo.godinaProizvodnje\\\">\\n                <small [hidden]=\\\"godina.valid || (godina.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Godina je obavezna (pozitivan broj).\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Broj putnika vozila</label>\\n                <input type=\\\"text\\\" #brojSedista=\\\"ngModel\\\" class=\\\"form-control\\\" id=\\\"sediste\\\" name=\\\"sediste\\\" placeholder=\\\"Broj sedista vozila\\\" required [(ngModel)] = \\\"vozilo.brojPutnika\\\">\\n                <small [hidden]=\\\"brojSedista.valid || (brojSedista.pristine && !formVozilo.submitted)\\\" class=\\\"text-danger\\\">\\n                  Broj putnika je obavezan (pozitivan broj).\\n                </small>\\n              </div>\\n               \\n              <div *ngIf=\\\"isDataAvailable\\\">\\n                <button type=\\\"button\\\" [disabled]=\\\"!formVozilo.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"update()\\\">Azuriraj</button>\\n              </div>\\n              <div *ngIf=\\\"!isDataAvailable\\\">\\n                <button type=\\\"button\\\" [disabled]=\\\"!formVozilo.valid\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"create()\\\">Dodaj</button>\\n              </div>\\n              <button type=\\\"button\\\" id=\\\"submit\\\" name=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin:5px;\\\" (click) = \\\"goBack()\\\">Odustani</button>\\n            </form>\\n        </div>\\n    </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.html\n// module id = ./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Vozilo } from 'app/model/vozila/vozilo';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VoziloService } from 'app/service/vozila/vozilo.service';\n\n@Component({\n  selector: 'app-azuriranje-vozila',\n  templateUrl: './azuriranje-vozila.component.html',\n  styleUrls: ['./azuriranje-vozila.component.css']\n})\nexport class AzuriranjeVozilaComponent implements OnInit {\n\n  id: number; //id vozila\n  idGaraze: number;\n  idKompanija: number;\n\n  vozilo: Vozilo = new Vozilo();\n  private sub: any;\n  isDataAvailable: boolean;\n  maksimalnaDuzina: number = 30;\n\n  constructor(private voziloService :VoziloService, private route: ActivatedRoute, private router: Router) \n  { \n      \n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      this.idKompanija = +params['kompanija-id'];\n      this.idGaraze = +params['garaza-id'];\n      if(params['id'] != null){\n        this.id = +params['id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa  \n        if(this.id != null)\n        {\n          this.voziloService.findOne(this.idKompanija, this.idGaraze, this.id).subscribe(\n            e => {\n              this.vozilo = e;\n            }\n          )\n\n          this.isDataAvailable = true;\n        }\n        else{\n          //znaci dodajem novi koji ne postoji\n          this.vozilo = new Vozilo();\n          this.isDataAvailable = false;\n        }\n     }\n   });\n  }\n\n  create(){\n    let message: string = this.proveriUnosVozilo();\n    if(message === \"OK\"){\n      this.voziloService.addVozilo(this.idKompanija, this.idGaraze, this.vozilo).subscribe(\n        s => {\n          this.vozilo = s;\n          this.router.navigate(['kompanije-vozila/' + this.idKompanija + '/garaze/' + this.idGaraze + '/vozila']);\n        },\n        err=> console.log(\"err\")\n      );    \n    }\n    else{\n      alert(message)\n    }\n  }\n\n  update(){\n    let message: string = this.proveriUnosVozilo();\n    if(message === \"OK\")\n    {\n      this.voziloService.updateVozilo(this.idKompanija, this.idGaraze, this.vozilo.id, this.vozilo).subscribe(\n        s => {\n          this.vozilo = s;\n          this.router.navigate(['kompanije-vozila/' + this.idKompanija + '/garaze/' + this.idGaraze + '/vozila']);\n        },\n        err => \n        {\n          console.log(\"err\")\n           if( err.status === 418){  // i'm a teapot znaci vec je izmenjeno od strane drugog admina\n            alert(\"Nije moguce izmeniti zeljeno vozilo vec je izmenjeno od strane drugog admina rent a car servisa.\")\n            }\n        }\n      );    \n    }\n    else{\n      alert(message)\n    }\n  }\n\n  goBack(){\n    this.router.navigate(['kompanije-vozila/' + this.idKompanija + '/garaze/' + this.idGaraze + '/vozila']);\n  }\n\n  proveriUnosVozilo(): string{\n    if(this.vozilo.marka === \"\" || this.vozilo.marka.length > this.maksimalnaDuzina){\n      return \"Morate popuniti marku vozila koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.vozilo.model === \"\" || this.vozilo.model.length > this.maksimalnaDuzina){\n      return \"Morate popuniti model vozila koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.vozilo.naziv === \"\" || this.vozilo.naziv.length > this.maksimalnaDuzina){\n      return \"Morate popuniti naziv vozila koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.vozilo.tip === \"\" || this.vozilo.tip.length > this.maksimalnaDuzina){\n      return \"Morate popuniti tip vozila koja mora biti kraca od \" + this.maksimalnaDuzina + \" karaktera\";\n    }\n\n    if(this.vozilo.cenaPoDanu <= 0){\n      return \"Morate popuniti cenu vozila po danu koja mora biti pozitivan broj\";\n    }\n\n    if(this.vozilo.godinaProizvodnje <= 0){\n      return \"Morate popuniti godinu proizvodnje vozila koja mora biti pozitivan broj\";\n    }\n\n    if(this.vozilo.brojPutnika <= 0){\n      return \"Morate popuniti broj putnika vozila koja mora biti pozitivan broj\";\n    }\n\n    return \"OK\"\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/azuriranje-vozila/azuriranje-vozila.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.css\n// module id = ./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n      </div>\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n          <div class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let garaza of garaze | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                  <div class=\\\"media col-md-3\\\">\\n                      <figure class=\\\"pull-left\\\">\\n                          <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/garaza.jpg\\\" alt=\\\"placehold.it/350x250\\\" >\\n                      </figure>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                      <h4 class=\\\"list-group-item-text\\\">Kompanija: {{garaza.kompanijaDTO.naziv}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Zemlja: {{garaza.adresaDTO.zemlja}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Grad: {{garaza.adresaDTO.grad}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Ulica: {{garaza.adresaDTO.ulica}}</h4>\\n                      <h4 class=\\\"list-group-item-text\\\">Broj: {{garaza.adresaDTO.broj}}</h4>\\n                  </div>\\n                  <div class=\\\"col-md-3 text-center centered-button\\\" style=\\\"vertical-align: middle;\\\">\\n                      <button *ngIf=\\\"obrisiVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"delete(garaza.id)\\\">Obrisi</button>\\n                      <button *ngIf=\\\"azurirajVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"update(garaza.id)\\\">Izmeni</button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"viewDetails(garaza.id)\\\">Prikazi vozila</button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"addVozilo(garaza.id)\\\">Kreiraj vozilo</button>\\n                  </div>\\n            </a>\\n          </div>\\n      <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n          <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.html\n// module id = ./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Garaza } from 'app/model/vozila/garaza';\nimport { GarazaService } from 'app/service/vozila/garaza.service';\nimport { AuthService } from 'app/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-prikaz-garaza',\n  templateUrl: './prikaz-garaza.component.html',\n  styleUrls: ['./prikaz-garaza.component.css']\n})\nexport class PrikazGarazaComponent implements OnInit {\n\n  constructor(private filijalaService: GarazaService, private router: Router, private route: ActivatedRoute,  \n    private authService: AuthService) {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n  }\n\n  id: number; //kompanija-id\n  public garaze: Garaza[] = [];\n  private sub: any;\n  isDataAvailable: boolean;\n  public tipkorisnika: string;\n  dropdownSettings = {};\n  tipoviVozila: string[];\n  mestaFilijala: string[];\n  public min = new Date();\n  idRezervacije: number = 0;\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['kompanija-id'] != null){\n        this.id = +params['kompanija-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        \n        if(this.id != null )\n        {\n          /*this.voziloService.findVozilaForRent(this.id).subscribe(\n            e => \n            {\n              this.vozila = e;\n            }\n          )*/\n          this.getAll();\n          }\n        }\n      }\n      );\n    }\n\n\n\n  getAll(){\n    this.filijalaService.findAll(this.id).subscribe(\n      s => { this.garaze = s; }\n    );\n  }\n\n  update(id: number){\n    this.router.navigate(['kompanije-vozila/' + this.id +  '/garaze/add/' + id]);\n   }\n\n   delete(id: number){\n    this.filijalaService.delete(this.id, id).subscribe(\n      s => this.getAll(),\n      err=> console.log(\"err\")\n    );    \n   }\n\n  // addVoziloToRent( ){\n  //   this.router.navigate(['rentacarovi/' + this.id +  '/svaVozilaKojaSeMoguDodati']);\n  // }\n\n  viewDetails(idGaraze: number){\n    this.router.navigate(['kompanije-vozila/' + this.id +  '/garaze/' + idGaraze + '/vozila']);\n  }\n\n addVozilo(idGaraze: number){\n  this.router.navigate(['kompanije-vozila/' + this.id +  '/garaze/' + idGaraze + '/vozila/add']);\n  }\n\n\n  obrisiVoziloVidljivo(vozilo: Garaza){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  azurirajVoziloVidljivo(vozilo: Garaza){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/prikaz-garaza/prikaz-garaza.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.css\n// module id = ./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div *ngIf = \\\"vidjivoBrzeRezervacije()\\\" class=\\\"col-md-8 col-sm-offset-4 brzaRezervacija\\\">\\n      <img style=\\\"max-width: 100%; height: 200px;\\\" class=\\\"img-fluid\\\" (click) = \\\"brzaRezervacija()\\\" src=\\\"assets/hotel/SALE.jpg\\\"/>\\n  </div>\\n<div class=\\\"col-md-8 col-sm-offset-2\\\" style=\\\"margin-bottom: 15px;\\\">\\n      <form class=\\\"md-form mr-auto mb-4\\\">\\n              <table class=\\\"table table-striped\\\">\\n          <tbody>\\n              <tr>\\n                  <td>\\n                      <label>Adresa servisa</label>\\n                  <ng-multiselect-dropdown [placeholder]=\\\"'Adresa'\\\" [data]=\\\"adreseRenta\\\" [(ngModel)]=\\\"izabranaAdresa\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                  </ng-multiselect-dropdown>\\n              </td>\\n              <td>\\n                  <label>Naziv servisa</label>\\n                  <ng-multiselect-dropdown [placeholder]=\\\"'Naziv'\\\" [data]=\\\"naziviRenta\\\" [(ngModel)]=\\\"izabraniNaziv\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                  </ng-multiselect-dropdown>\\n              </td>\\n              <td>\\n                      <input class=\\\"form-control mr-sm-2\\\" style=\\\"margin-top:24px;\\\" type=\\\"button\\\" value=\\\"Trazi\\\" aria-label=\\\"Search\\\" (click) = \\\"trazi()\\\">\\n              </td>\\n          </tr>\\n  </table>\\n    </form>\\n</div>\\n  <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n        <div class=\\\"list-group\\\">\\n          <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let rentacar of rentacarovi | paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n                <div class=\\\"media col-md-3\\\">\\n                    <figure class=\\\"pull-left\\\">\\n                        <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/kompanija.jpg\\\" alt=\\\"placehold.it/350x250\\\" (click)=\\\"viewDetails(rentacar.id)\\\">\\n                    </figure>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                  <a (click)=\\\"getAllSort('naziv')\\\">{{rentacar.naziv}} </a>\\n                  <a (click)=\\\"getAllSort('adresa')\\\"> <small><i>{{rentacar.adresa.zemlja}}</i></small> <small><i>{{rentacar.adresa.grad}}</i></small> \\n                    <small><i>{{rentacar.adresa.ulica}}</i></small> <small><i>{{rentacar.adresa.broj}}</i></small></a>\\n                  <span class=\\\"glyphicon glyphicon-map-marker\\\" (click) = \\\"pokaziMapu(rentacar.longitude, rentacar.latitude)\\\" ></span>\\n                  <p class=\\\"group inner list-group-item-text\\\">\\n                    {{rentacar.opis}}</p>\\n                </div>\\n                <div *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaBrise()\\\" class=\\\"col-md-2\\\" style=\\\"margin-top: 5px; padding: 0px;\\\">\\n                  <span class=\\\"glyphicon glyphicon-trash\\\" (click) = \\\"delete(rentacar.id)\\\"></span>\\n              </div>\\n              <div *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" class=\\\"col-md-2\\\" style=\\\"margin-top: 5px; padding: 0px;\\\">\\n                  <span class=\\\"glyphicon glyphicon-wrench\\\" (click) = \\\"update(rentacar.id)\\\"></span>\\n              </div>\\n              <button *ngIf=\\\"ulogovaniKorisnikImaDozvoluDaMenja()\\\" (click) = \\\"createGarage(rentacar.id)\\\" >Kreiraj Garazu\\n              </button>\\n          </a>\\n        </div>\\n        \\n    <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.html\n// module id = ./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { KompanijaVozila } from 'app/model/vozila/kompanijaVozila';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { AuthService } from 'app/auth.service';\nimport { KompanijaVozilaService } from 'app/service/vozila/kompanija-vozila.service';\n\n@Component({\n  selector: 'app-prikaz-kompanija-vozila',\n  templateUrl: './prikaz-kompanija-vozila.component.html',\n  styleUrls: ['./prikaz-kompanija-vozila.component.css']\n})\nexport class PrikazKompanijaVozilaComponent implements OnInit {\n\n  public rentacarovi: KompanijaVozila[] = [];\n  public tipkorisnika: string;\n  adreseRenta: string[] = [];\n  pomAdreseRenta: string[] = [];\n  naziviRenta: string[] = [];\n  dropdownSettings = {};\n  izabranaAdresa: string = \"\";\n  izabraniNaziv: string = \"\";\n  paramDir: string = \"ASC\";\n  ocenjiviRentovi: number[];\n  prihod: number;\n  idRezervacije: number = 0;\n  idFilijala: number = 0;\n\n  constructor(private route: ActivatedRoute, private rentacarService : KompanijaVozilaService, private router: Router, private authService: AuthService\n   ) \n   {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n    this.getAll();\n  }\n\n  ngOnInit() {\n\n    this.rentacarService.vratiSveAdrese().subscribe(\n      s => \n      {\n       s.forEach(item => {\n          let temp: string = item.zemlja + \" \" + item.grad + \" \" + item.ulica + \" \" + item.broj;\n          this.pomAdreseRenta.push(temp);\n        }); \n\n        this.adreseRenta = this.pomAdreseRenta;\n      }\n    )\n\n    this.rentacarService.vratiSveNazive().subscribe(\n      a => \n      {\n        this.naziviRenta = a;\n      }\n    )\n\n\n    this.dropdownSettings = {\n      singleSelection: true,\n      // idField: 'id',\n      //textField: 'adreseRenta',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n\n   /* this.route.queryParams.subscribe(params => {\n      if(params[\"idRezervacije\"] !== undefined){\n        this.idRezervacije = params[\"idRezervacije\"];\n      }\n    });*/\n  }\n\n  getAll(){\n    /*if(this.tipkorisnika !== \"nema_korisnika\"){\n      this.rentacarService.vratiListuOcenjivihServisa().subscribe(\n        a => \n        {\n          this.ocenjiviRentovi = a;\n          this.rentacarService.findAll().subscribe(\n        \n            s => { \n              this.rentacarovi = s;  \n            }\n          );\n        }\n      );\n    }*/\n    //else{\n      this.rentacarService.findAll().subscribe(\n        \n        s => { \n          this.rentacarovi = s;\n        }\n      );\n   // }\n  }\n\n  delete(id: number){\n    this.rentacarService.deleteRentACar(id).subscribe(\n      s => this.getAll(),\n      err=> console.log(\"err\")\n    );    \n   }\n \n   update(id: number){\n    this.router.navigate(['kompanije-vozila/add', id]);\n   }\n\n   postaviFilijalu(id: number){\n    this.idFilijala = id;\n   }\n\n   viewDetails(id: number){\n     //if(this.idFilijala != 0){\n      this.router.navigate(['kompanije-vozila/' + id + '/garaze']);\n     /*}\n     else{\n       alert('izaberi filjalu');\n     }*/\n    \n  }\n\n  createGarage(id: number){\n    this.router.navigate(['kompanije-vozila/' + id + '/garaze/add']);\n  }\n\n  imageClick(id: number){\n    /*if(this.idRezervacije !== 0){\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n            \"idRezervacije\" : this.idRezervacije\n        }\n      };\n      this.router.navigate(['rentacarovi/' +  id + '/prikazVozila'], navigationExtras);\n    }\n    else {\n      this.router.navigate(['rentacarovi/' +  id + '/prikazVozila']);\n    }*/\n  }\n\n  spanClick(id: number){\n    //this.router.navigate(['rentacarovi/' +  id + '/prikazFilijala']);\n  }\n\n  ulogovaniKorisnikImaDozvoluDaMenja(){\n    /*if( this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\" || this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n      return true;\n    }\n    return false; */\n    return true;\n  }\n\n  ulogovaniKorisnikImaDozvoluDaBrise(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  rezervisiDugme(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n      return true;\n    }\n    return false; \n  }\n\n  ocenaVidljivo(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n      return true;\n    }\n    return false; \n  }\n\n  trazi(){\n    // this.rentacarService.trazenjeRentacarova(this.izabraniNaziv, this.izabranaAdresa).subscribe(\n    //   s => {\n    //     this.rentacarovi = s;\n    //   },\n    //   err=> console.log(\"err\")\n    // );    \n  }\n\n  getAllSort(paramSort: string){\n    this.rentacarService.findAllSort(paramSort, this.paramDir).subscribe(\n      ss => { this.rentacarovi = ss; }\n    );\n    if (this.paramDir === 'ASC'){\n      this.paramDir = 'DESC';\n    } else {\n      this.paramDir = 'ASC';\n    }\n  }\n\n  brzaRezervacija(){\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n          \"idRezervacije\" : this.idRezervacije\n      }\n    };\n    this.router.navigate(['rentacarovi/brzaRezervacijaVozila'], navigationExtras);\n  }\n\n  daLiSmeDaOceni(id: number): boolean{\n    if(this.ocenjiviRentovi.indexOf(id) > -1 ) {\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n  oceniServis(rentacar: KompanijaVozila){\n    /*if(rentacar.ulogovanogKorisnikaOcena > 0){\n      let ocena: OcenaRenta = new OcenaRenta();\n      ocena.rentACar = rentacar;\n      ocena.ocenaRenta = rentacar.ulogovanogKorisnikaOcena;\n      this.rentacarService.oceniServis(1, ocena).subscribe(\n        ajde => \n        {\n        }\n      )\n    }*/\n  }\n\n  pokaziMapu(longitude : number, latitude: number){\n    //this.router.navigate(['prikaziMapu/' + longitude + \"/\" + latitude]);\n  }\n\n  vidjivoBrzeRezervacije(){\n    if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" && this.idRezervacije !== 0){\n      return true;\n    }\n    return false; \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/prikaz-kompanija-vozila/prikaz-kompanija-vozila.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.css\n// module id = ./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n            <button *ngIf=\\\"dodajAdminaVidljivo()\\\" style=\\\"width: auto; float: right;\\\" class=\\\"form-control mr-sm-5\\\" (click) = \\\"dodajAdministratora()\\\">Dodaj administratora rent a car</button>\\n        <button *ngIf=\\\"dodajVoziloVidljivo()\\\" style=\\\"width: auto; float: right;\\\" class=\\\"form-control mr-sm-5\\\" (click) = \\\"izvestajPoslovanja()\\\">Izvestaj o poslovanju</button>\\n    </div>\\n  <div class=\\\"col-md-8 col-sm-offset-2\\\">\\n        <div class=\\\"list-group\\\">\\n          <a class=\\\"list-group-item\\\" style=\\\"min-height: 220px; max-height: 350px;\\\" *ngFor = \\\"let i = index; let vozilo of vozila | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n                <div class=\\\"media col-md-3\\\">\\n                    <figure class=\\\"pull-left\\\">\\n                        <img class=\\\"media-object img-rounded img-responsive\\\"  src=\\\"assets/vozilo.jpg\\\" alt=\\\"placehold.it/350x250\\\" >\\n                    </figure>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <h3 class=\\\"list-group-item-heading\\\"> {{vozilo.garazaDTO.kompanijaDTO.naziv}} </h3>\\n                    <h4 class=\\\"list-group-item-text\\\">Tip vozila: {{vozilo.tip}}</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Marka: {{vozilo.marka}}</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Model: {{vozilo.model}}</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Cena: {{vozilo.cenaPoDanu}}$</h4>\\n                    <h4 class=\\\"list-group-item-text\\\">Ocena: {{vozilo.prosecnaOcena}} <small> / </small> 5 </h4>\\n                </div>\\n                <!-- <div class=\\\"col-md-3 text-center centered\\\">\\n                    <button *ngIf=\\\"rezervisiDugme()\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click)=\\\"rezervisiVozilo(vozilo.id)\\\"> Rezervisi </button>\\n                </div> -->\\n                <div class=\\\"col-md-3 text-center centered-button\\\" style=\\\"vertical-align: middle;\\\">\\n                    <button *ngIf=\\\"obrisiVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"deleteVoziloFromRent(vozilo)\\\">Obrisi</button>\\n                    <button *ngIf=\\\"azurirajVoziloVidljivo(vozilo)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-lg btn-block\\\" (click) = \\\"update(vozilo.id)\\\">Izmeni</button>\\n                </div>\\n          </a>\\n        </div>\\n\\n  </div>\\n  <div class=\\\"col-md-10 col-sm-offset-1\\\">\\n        <ng5-slider [(value)]=\\\"minValue\\\" [(highValue)]=\\\"maxValue\\\" [options]=\\\"options\\\"></ng5-slider>\\n        <form class=\\\"md-form mr-auto mb-4\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tbody>\\n                    <tr>\\n                        <td>\\n                            <label> Datum preuzimanja </label>\\n                            <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Date:\\\" \\n                                    [(ngModel)]=\\\"rezervacijaVozila.pocetniDatum\\\"\\n                                    [min]=\\\"min\\\"\\n                                    (change)=\\\"promenaDatuma()\\\"\\n                                    [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\n                          </td>\\n                        <td>\\n                            <label> Datum vracanja </label>\\n                            <input class=\\\"form-control mr-sm-2\\\" placeholder=\\\"Date:\\\" \\n                                    [(ngModel)]=\\\"rezervacijaVozila.krajnjiDatum\\\"\\n                                    [min]=\\\"min\\\"\\n                                    [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt2></owl-date-time>\\n                        </td>\\n                        <td>\\n                            <label> Broj putnika </label>\\n                            <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Broj putnika\\\" aria-label=\\\"Search\\\" [(ngModel)] = \\\"rezervacijaVozila.brojPutnika\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n                        </td>\\n  \\n                        <td>\\n                              <label>Mesto preuzimanja</label>\\n                          <ng-multiselect-dropdown [placeholder]=\\\"'Mesto preuzimanja'\\\" [data]=\\\"mestaFilijala\\\" [(ngModel)]=\\\"rezervacijaVozila.mestoPreuzimanja\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                          </ng-multiselect-dropdown>\\n                      </td>\\n                      <td>\\n                              <label>Mesto vracanja</label>\\n                          <ng-multiselect-dropdown [placeholder]=\\\"'Mesto vracanja'\\\" [data]=\\\"mestaFilijala\\\" [(ngModel)]=\\\"rezervacijaVozila.mestoVracanja\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                          </ng-multiselect-dropdown>\\n                      </td>\\n                      <td>\\n                          <label>Tip vozila</label>\\n                          <ng-multiselect-dropdown [placeholder]=\\\"'Tip vozila'\\\" [data]=\\\"tipoviVozila\\\" [(ngModel)]=\\\"rezervacijaVozila.tipVozila\\\" [settings]=\\\"dropdownSettings\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                          </ng-multiselect-dropdown>\\n                      </td>\\n  \\n                        <td>\\n                            <input class=\\\"form-control mr-sm-2\\\" style=\\\"margin-top: 24px;\\\" type=\\\"button\\\" value=\\\"Trazi\\\" aria-label=\\\"Search\\\" (click) = \\\"trazi()\\\">\\n                        </td>\\n                  </tr>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n\\n    <div class=\\\"item col-lg-10 col-lg-10\\\" style=\\\"width: 100%; text-align: center;\\\">\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.html\n// module id = ./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router, ActivatedRoute } from '@angular/router';\nimport { Vozilo } from 'app/model/vozila/vozilo';\nimport { LabelType, Options } from 'ng5-slider';\nimport { VoziloService } from 'app/service/vozila/vozilo.service';\nimport { AuthService } from 'app/auth.service';\nimport { GarazaService } from 'app/service/vozila/garaza.service';\nimport { ZakupVozila } from 'app/model/vozila/zakupVozila';\n\n@Component({\n  selector: 'app-prikaz-vozila',\n  templateUrl: './prikaz-vozila.component.html',\n  styleUrls: ['./prikaz-vozila.component.css']\n})\nexport class PrikazVozilaComponent implements OnInit {\n\n  constructor(private voziloService : VoziloService, private filijalaService: GarazaService, private router: Router, private route: ActivatedRoute,  \n    private authService: AuthService) {\n    let res = localStorage.getItem('token');\n    if(res != null){\n      //this.tipkorisnika = this.authService.getRoles(res);\n    }\n    else{\n      this.tipkorisnika = \"nema_korisnika\";\n    }\n  }\n\n  id: number; //kompanija-id\n  garazaId: number;\n  public vozila: Vozilo[] = [];\n  private sub: any;\n  isDataAvailable: boolean;\n  public tipkorisnika: string;\n  public rezervacijaVozila: ZakupVozila = new ZakupVozila();\n  dropdownSettings = {};\n  tipoviVozila: string[];\n  mestaFilijala: string[];\n  public min = new Date();\n  idRezervacije: number = 0;\n\n  minValue: number = 100;\n  maxValue: number = 400;\n  options: Options = {\n    floor: this.minValue,\n    ceil: this.maxValue,\n    translate: (value: number, label: LabelType): string => {\n      switch (label) {\n        case LabelType.Low:\n          return '<b>Min price:</b> $' + value;\n        case LabelType.High:\n          return '<b>Max price:</b> $' + value;\n        default:\n          return '$' + value;\n      }\n    }\n  };\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.isDataAvailable = false;\n      if(params['kompanija-id'] != null){\n        this.id = +params['kompanija-id']; // (+) konvertuje string 'id' u broj\n        //id postavljamo kao path parametar pomocu interpolacije stringa\n        this.garazaId = +params['garaza-id'];\n        if(this.id != null )\n        {\n          this.voziloService.findAll(this.id, this.garazaId).subscribe(\n            e => \n            {\n              this.vozila = e;\n            }\n          )\n\n          /*this.voziloService.vratiSveTipove().subscribe(\n            s => \n            {\n              this.tipoviVozila = s;\n            }\n          )\n\n          this.filijalaService.vratiFilijaleForRent(this.id).subscribe(\n            a => \n            {\n              this.mestaFilijala = a;\n            }\n          )*/\n\n          this.dropdownSettings = {\n            singleSelection: true,\n            // idField: 'id',\n            // textField: 'tipoviVozila',\n            itemsShowLimit: 3,\n            allowSearchFilter: true\n          };\n\n          /*this.voziloService.minimalnaCenaVozila().subscribe(\n            succ => \n            {\n              this.minValue = succ;\n\n              this.voziloService.maksimalnaCenaVozila().subscribe(\n                success => \n                {\n                  this.maxValue = success;\n    \n                  this.options =  {\n                    floor: this.minValue,\n                    ceil: this.maxValue,\n                    translate: (value: number, label: LabelType): string => {\n                      switch (label) {\n                        case LabelType.Low:\n                          return '<b>Min price:</b> $' + value;\n                        case LabelType.High:\n                          return '<b>Max price:</b> $' + value;\n                        default:\n                          return '$' + value;\n                      }\n                    }\n                  };\n                }\n              )\n            }\n          ) */\n        }\n     }\n   });\n\n    // this.route.queryParams.subscribe(params => {\n    //   if(params[\"idRezervacije\"] !== undefined){\n    //     this.idRezervacije = params[\"idRezervacije\"];\n    //   }\n    // });\n  }\n\n  getAll(){\n    this.voziloService.findAll(this.id, this.garazaId).subscribe(\n      s => { this.vozila = s; }\n    );\n  }\n\n  deleteVoziloFromRent(vozilo: Vozilo){\n    this.voziloService.deleteVozilo(this.id, this.garazaId, vozilo.id).subscribe(\n      s => {\n        this.ngOnInit();\n        //this.router.navigate(['hoteli/' + soba.hotel.id + '/prikazSoba']);\n      },\n      err=> console.log(\"err\")\n    );    \n   }\n \n   update(id: number){\n    this.router.navigate(['kompanije-vozila/' + this.id + '/garaze/' + this.garazaId + '/vozila/add/' + id]);\n   }\n\n\n  addVozilo(id: number){ \n    this.router.navigate(['kompanije-vozila/' + this.id + '/garaze/' + this.garazaId + '/vozila/add']);\n  }\n\n  // rezervisiDugme(){\n  //   if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" && this.idRezervacije !==0){\n  //     return true;\n  //   }\n  //   return false; \n  // }\n\n  obrisiVoziloVidljivo(vozilo: Vozilo){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  azurirajVoziloVidljivo(vozilo: Vozilo){\n    /*if(!vozilo.dozvoljenoBrisanjeIzmena){\n      return false;\n    }*/\n\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  dodajVoziloVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_rent_a_car_servisa\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  dodajAdminaVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Administrator_sistema\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  ocenaVidljivo(){\n    // if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  vidljivoPretraga(){\n    // if(this.tipkorisnika === \"ROLE_Registrovani_korisnik\" || this.tipkorisnika === \"nema_korisnika\"){\n    //   return true;\n    // }\n    // return false; \n    return true;\n  }\n\n  trazi(){\n    /*let rezervacija = new RezervacijaVozila()\n    if(this.proveriRezervaciju())\n    {\n      rezervacija.datumPreuzimanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumPreuzimanja.toString().substring(4,15));\n      rezervacija.datumVracanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumVracanja.toString().substring(4,15));\n      rezervacija.tipVozila = this.rezervacijaVozila.tipVozila.toString();\n      rezervacija.mestoPreuzimanja = this.rezervacijaVozila.mestoPreuzimanja.toString();\n      rezervacija.mestoVracanja = this.rezervacijaVozila.mestoVracanja.toString();\n      rezervacija.brojPutnika = this.rezervacijaVozila.brojPutnika;\n      rezervacija.minimalnaCena = this.minValue;\n      rezervacija.maksimalnaCena = this.maxValue;\n      this.voziloService.traziVozilo(rezervacija, this.id).subscribe(\n        s => {\n          this.vozila = s;\n        },\n        err=> console.log(\"err\")\n      );    \n      }\n      else{\n        alert(\"morate uneti datum preuzimanja i vracanja, mesto preuzimanja i broj putnika veci od 0\");\n      }*/\n  }\n\n  konvertujUDobroVreme(primljeniString: string): string{\n    let pravoVreme: string;\n    pravoVreme = primljeniString.substring(7,11) + \"/\" + primljeniString.substring(0,3) + \"/\" + primljeniString.substring(4,6);\n    pravoVreme = this.mesecPrebaciUbroj(pravoVreme); \n    //alert(pravoVreme)\n    return pravoVreme;\n  }\n\n  mesecPrebaciUbroj(primljeniString: string): string{\n    primljeniString = primljeniString.replace(\"Jan\", \"01\");\n    primljeniString = primljeniString.replace(\"Feb\", \"02\");\n    primljeniString = primljeniString.replace(\"Mar\", \"03\");\n    primljeniString = primljeniString.replace(\"Apr\", \"04\");\n    primljeniString = primljeniString.replace(\"May\", \"05\");\n    primljeniString = primljeniString.replace(\"Jun\", \"06\");\n    primljeniString = primljeniString.replace(\"Jul\", \"07\");\n    primljeniString = primljeniString.replace(\"Aug\", \"08\");\n    primljeniString = primljeniString.replace(\"Sep\", \"09\");\n    primljeniString = primljeniString.replace(\"Oct\", \"10\");\n    primljeniString = primljeniString.replace(\"Nov\", \"11\");\n    primljeniString = primljeniString.replace(\"Dec\", \"12\");\n\n    return primljeniString;\n    \n  }\n\n  proveriRezervaciju(): boolean{\n    /*if(this.rezervacijaVozila.datumPreuzimanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.datumVracanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.mestoPreuzimanja === \"\")\n      return false;\n    if(this.rezervacijaVozila.brojPutnika <= 0)\n      return false;\n    if(this.rezervacijaVozila.datumPreuzimanja > this.rezervacijaVozila.datumVracanja)\n      return false;\n*/\n    return true;\n  }\n\n  rezervisiVozilo(idVozila: number){\n      //alert(idVozila)\n    /*let rezervacija = new RezervacijaVozila()\n    if(this.proveriRezervaciju())\n    {\n      rezervacija.datumPreuzimanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumPreuzimanja.toString().substring(4,15));\n      rezervacija.datumVracanja = this.konvertujUDobroVreme(this.rezervacijaVozila.datumVracanja.toString().substring(4,15));\n      rezervacija.tipVozila = this.rezervacijaVozila.tipVozila.toString();\n      rezervacija.mestoPreuzimanja = this.rezervacijaVozila.mestoPreuzimanja.toString();\n      rezervacija.mestoVracanja = this.rezervacijaVozila.mestoVracanja.toString();\n      rezervacija.brojPutnika = this.rezervacijaVozila.brojPutnika;\n      rezervacija.vozilo.id = idVozila;\n      rezervacija.minimalnaCena = this.minValue;\n      rezervacija.maksimalnaCena = this.maxValue;\n\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n            \"datumPreuzimanja\": rezervacija.datumPreuzimanja,\n            \"datumVracanja\": rezervacija.datumVracanja,\n            \"brojPutnika\" : rezervacija.brojPutnika,\n            \"mestoPreuzimanja\" : rezervacija.mestoPreuzimanja,\n            \"mestoVracanja\" : rezervacija.mestoVracanja,\n            \"idRezervacije\" : this.idRezervacije,\n            \n        }\n    };\n        this.router.navigate(['/rentacarovi/' + idVozila + '/potvrdiRezervaciju'], navigationExtras);\n\n    }\n    else{\n      alert(\"morate uneti datum preuzimanja i vracanja, datum preuzimanja mora biti pre datuma vracanja, mesto preuzimanja i broj putnika veci od 0\");\n    }*/\n  }\n\n  /*dodajAdministratora(){\n    this.router.navigate(['registracija/dodavanjeAdministratora/2']);\n  }\n\n  izvestajPoslovanja(){\n    this.router.navigate(['rentacarovi/' + this.id +  '/izvestaj']);\n  }*/\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/vozila/prikaz-vozila/prikaz-vozila.component.ts","import { Injectable, Injector } from '@angular/core';\r\nimport {HttpInterceptor} from '@angular/common/http';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpEvent } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class HInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private injector: Injector) { }   //u svaki zahtev postavi header na aplication json\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n    if (localStorage.getItem('token') != null) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n    } else {\r\n      request = request.clone({});\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/h-interceptor.service.ts","export class CenovnikSobe{\r\n    public id: number;\r\n\tpublic pocetniDatum: string;\r\n\tpublic krajnjiDatum: string;\r\n    public cena: number;\r\n    \r\n    constructor(){\r\n        this.id = 0;\r\n        this.pocetniDatum = \"\";\r\n        this.krajnjiDatum = \"\";\r\n        this.cena = 0;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/hotel/cenovnikSobe.ts","import { Adresa } from \"../opsti/adresa\";\r\n\r\nexport class Hotel{\r\n\r\n    public id: number;\r\n    public naziv: string;\r\n    public opis: string;\r\n    public adresaDTO: Adresa;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.naziv = \"\";\r\n        this.opis = \"\";\r\n        this.adresaDTO = new Adresa();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/hotel/hotel.ts","export class Opcija{\r\n\r\n    public id: number;\r\n    public naziv: string;\r\n    public cena: number;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.naziv = \"\";\r\n        this.cena = 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/hotel/opcija.ts","export class Soba{\r\n\r\n    public id: number;\r\n    public sprat: number;\r\n    public brojKreveta: number;\r\n    public tip: string;\r\n    public cenaPoDanu: number;\r\n    public prosecnaOcena: number;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.sprat = 0;\r\n        this.brojKreveta = 0;\r\n        this.tip = \"\";\r\n        this.cenaPoDanu = 0;\r\n        this.prosecnaOcena = 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/hotel/soba.ts","import { Soba } from \"./soba\";\r\nimport { Opcija } from \"./opcija\";\r\n\r\nexport class ZakupSoba{\r\n\r\n    public id: number;\r\n\tpublic pocetniDatum: string;\r\n\tpublic krajnjiDatum: string;\r\n\tpublic cenaZakupa: number;\r\n\tpublic dodatniPopust: number;\r\n\tpublic popustNaTip: number;\r\n\tpublic tip: string;\r\n    public sobe: Soba[];\r\n    public brojGostiju: number;\r\n    public opcije: Opcija[];\r\n    public minimalnaCena: number;\r\n    public maksimalnaCena: number;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.pocetniDatum = \"\";\r\n        this.krajnjiDatum = \"\";\r\n        this.cenaZakupa = 0;\r\n        this.dodatniPopust = 0;\r\n        this.popustNaTip = 0;\r\n        this.tip = \"\";\r\n        this.brojGostiju = 0;\r\n        this.sobe= [];\r\n        this.opcije = [];\r\n        this.minimalnaCena = 0;\r\n        this.maksimalnaCena = 0;\r\n    }\r\n}\r\n\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/model/hotel/zakupSoba.ts","export class Adresa{\r\n\r\n    public id: number;\r\n    public zemlja: string;\r\n    public grad: string;\r\n    public ulica: string;\r\n    public broj: number;\r\n\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.zemlja = \"\";\r\n        this.grad = \"\";\r\n        this.ulica = \"\";\r\n        this.broj = 0;\r\n    }\r\n}\r\n\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/model/opsti/adresa.ts","import { KompanijaVozila } from \"./kompanijaVozila\";\r\nimport { Adresa } from \"../opsti/adresa\";\r\n\r\nexport class Garaza{\r\n\r\n    public id: number;\r\n    public kompanijaDTO: KompanijaVozila;\r\n    public adresaDTO: Adresa;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.kompanijaDTO = new KompanijaVozila();\r\n        this.adresaDTO = new Adresa();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/vozila/garaza.ts","import { Adresa } from \"../opsti/adresa\";\r\nimport { Vozilo } from \"./vozilo\";\r\n\r\nexport class KompanijaVozila{\r\n\r\n    public id: number;\r\n    public naziv: string;\r\n    public opis: string;\r\n    public adresa: Adresa;\r\n    public vozila: Vozilo[];\r\n    public longitude: number;\r\n    public latitude: number;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.naziv = \"\";\r\n        this.opis = \"\";\r\n        this.adresa = new Adresa();\r\n        this.vozila = [];\r\n        this.longitude = 0;\r\n        this.latitude = 0;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/vozila/kompanijaVozila.ts","import { Garaza } from \"./garaza\";\r\n\r\nexport class Vozilo{\r\n\r\n    public id: number;\r\n    public marka: string;\r\n    public model: string;\r\n    public naziv: string;\r\n    public godinaProizvodnje: number;\r\n    public brojPutnika: number;\r\n    public cenaPoDanu: number;\r\n    public tip: string;\r\n    public garazaDTO: Garaza;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.brojPutnika = 0;\r\n        this.cenaPoDanu = 0;\r\n        this.godinaProizvodnje = 0;\r\n        this.marka = \"\";\r\n        this.model = \"\";\r\n        this.naziv = \"\";\r\n        this.tip = \"\";\r\n        this.garazaDTO = new Garaza();\r\n    }\r\n}\r\n\r\n\r\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/model/vozila/vozilo.ts","import { Vozilo } from \"./vozilo\";\r\n\r\nexport class ZakupVozila{\r\n\r\n    public id: number;\r\n\tpublic pocetniDatum: string;\r\n    public krajnjiDatum: string;\r\n    public brojPutnika: number;\r\n    public mestoPreuzimanja: string;\r\n    public mestoVracanja: string;\r\n\tpublic cenaZakupa: number;\r\n\tpublic dodatniPopust: number;\r\n\tpublic popustNaTip: number;\r\n\tpublic tip: string;\r\n    public voziloDTO: Vozilo;\r\n    public minimalnaCena: number;\r\n    public maksimalnaCena: number;\r\n\r\n    constructor(){\r\n        this.id = 0;\r\n        this.pocetniDatum = \"\";\r\n        this.krajnjiDatum = \"\";\r\n        this.brojPutnika = 0;\r\n        this.mestoPreuzimanja = \"\";\r\n        this.mestoVracanja = \"\";\r\n        this.cenaZakupa = 0;\r\n        this.dodatniPopust = 0;\r\n        this.popustNaTip = 0;\r\n        this.tip = \"\";\r\n        this.voziloDTO = new Vozilo();\r\n        this.maksimalnaCena = 0;\r\n        this.minimalnaCena = 0;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/vozila/zakupVozila.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CenovnikSobe } from 'app/model/hotel/cenovnikSobe';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class CenovnikService {\n\n  constructor(private http: HttpClient) { }\n  \n  add(novaFilijala: CenovnikSobe, idKompanije: number, sobaId: number): Observable<CenovnikSobe> { \n    return this.http.post<CenovnikSobe>(`/hoteli/${idKompanije}/sobe/${sobaId}/cenovnici`, novaFilijala);\n  }\n\n  findOne(hotelId: number, id: number, sobaId: number): Observable<CenovnikSobe> {\n    return this.http.get<CenovnikSobe>(`/hoteli/${hotelId}/sobe/${sobaId}/cenovnici/${id}`);\n  }\n\n  findAll(hotelId: number, sobaId: number): Observable<CenovnikSobe[]> {\n    return this.http.get<CenovnikSobe[]>(`/hoteli/${hotelId}/sobe/${sobaId}/cenovnici`);\n  }\n\n  delete(hotelId: number, sobaId: number, id: number): Observable<{}> {\n    return this.http.delete(`/hoteli/${hotelId}/sobe/${sobaId}/cenovnici/${id}`);\n  }\n\n  update(hotelId: number, sobaId: number, opcija: CenovnikSobe): Observable<CenovnikSobe> {\n    return this.http.put<CenovnikSobe>(`/hoteli/${hotelId}/sobe/${sobaId}/cenovnici`, opcija);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/hotel/cenovnik.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Hotel } from 'app/model/hotel/hotel';\nimport { Observable } from 'rxjs/Observable';\nimport { Adresa } from 'app/model/opsti/adresa';\n\n\n@Injectable()\nexport class HotelService {\n\n  constructor(private http: HttpClient) { }\n  \n  add(noviRentACar: Hotel): Observable<Hotel> {\n    return this.http.post<Hotel>('/hoteli', noviRentACar);\n  }\n\n  findOne(id: number): Observable<Hotel> {\n    return this.http.get<Hotel>(`/hoteli/${id}`);\n  }\n\n  findAll(): Observable<Hotel[]> {\n    return this.http.get<Hotel[]>('/hoteli');\n  }\n\n  delete(id: number): Observable<{}> {\n    return this.http.delete(`/hoteli/${id}`);\n  }\n\n  update(id: number, rentacar: Hotel): Observable<Hotel> {\n    return this.http.put<Hotel>(`/hoteli`, rentacar);\n  }\n\n\n  vratiSveNazive(): Observable<string[]> {\n    return this.http.get<string[]>('/adrese'); //popraviti jos\n  } \n\n  vratiSveAdrese(): Observable<Adresa[]> {\n    return this.http.get<Adresa[]>('/adrese'); //popraviti jos\n  }\n\n  trazenje(naziv: string, adresa: string): Observable<Hotel[]> { //dopraviti je\n    let listaUslova: string[] = []\n    listaUslova.push(naziv.toString());\n    listaUslova.push(adresa.toString());\n    return this.http.post<Hotel[]>(`/hoteli/trazenje`, listaUslova);\n  }\n\n  findAllSort(paramSort: string, paramDir: string): Observable<Hotel[]> {\n    return this.http.get<Hotel[]>(`/hoteli?sort=${paramSort},${paramDir}`);\n  }\n\n  /*vratiListuOcenjivihServisa(): Observable<number[]>{\n    return this.http.get<number[]>(`api/rezervacijeVozila/listaOcenjivih`);\n  }\n\n  oceniServis(id: number, ocena: OcenaRenta): Observable<OcenaRenta> {\n    return this.http.put<OcenaRenta>(`/api/ocene/${id}/postaviOcenuRent`, ocena);\n  }\n\n  prihodServisa(odDatuma: string, doDatuma: string, idRenta: number): Observable<number>{  \n    let params = new HttpParams();\n    params = params.append('odDatuma', odDatuma);\n    params = params.append('doDatuma', doDatuma);\n    params = params.append('idRenta', idRenta.toString());\n    return this.http.get<number>(`api/rezervacijeVozila/prihodiServisa`, {params: params});\n  }\n\n  posecenostServisa(id: number, odDatuma: string, doDatuma:string): Observable<String[]>{\n    let params = new HttpParams();\n    params = params.append('odDatuma', odDatuma);\n    params = params.append('doDatuma', doDatuma);\n    return this.http.get<String[]>(`/api/rezervacijeVozila/${id}/dnevnaPosecenost`, {params : params});\n  }*/\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/hotel/hotel.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { Opcija } from 'app/model/hotel/opcija';\n\n@Injectable()\nexport class OpcijaService {\n\n  constructor(private http: HttpClient) { }\n  \n  add(novaFilijala: Opcija, idKompanije: number): Observable<Opcija> {\n    return this.http.post<Opcija>(`/hoteli/${idKompanije}/opcije`, novaFilijala);\n  }\n\n  findOne(kompanijaId: number, id: number): Observable<Opcija> {\n    return this.http.get<Opcija>(`/hoteli/${kompanijaId}/opcije/${id}`);\n  }\n\n  findAll(kompanijaId: number): Observable<Opcija[]> {\n    return this.http.get<Opcija[]>('/hoteli/' + kompanijaId + '/opcije');\n  }\n\n  delete(kompanijaId: number, id: number): Observable<{}> {\n    return this.http.delete(`/hoteli/${kompanijaId}/opcije/${id}`);\n  }\n\n  update(hotelId: number, opcija: Opcija): Observable<Opcija> {\n    return this.http.put<Opcija>(`/hoteli/${hotelId}/opcije`, opcija);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/hotel/opcija.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Soba } from 'app/model/hotel/soba';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SobaService {\n\n  constructor(private http: HttpClient) { }\n  \n  /*addToRent(id: number, idRent: number): Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/${idRent}/dodajURentVozilo/${id}`);\n  }*/\n\n  findOne(hotel: number, id: number): Observable<Soba> {\n    return this.http.get<Soba>(`/hoteli/${hotel}/sobe/${id}`);\n  }\n\n  findAll(hotel: number): Observable<Soba[]> {\n    return this.http.get<Soba[]>(`/hoteli/${hotel}/sobe`);\n  }\n\n  /*findAllVozilaToAdd(): Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/svaVozilaKojaSeMoguDodati`);\n  }\n\n  findVozilaForRent(id: number):Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/${id}/prikazVozila`);\n  }*/\n\n  delete(hotel: number,  id: number): Observable<{}> {\n    return this.http.delete(`/hoteli/${hotel}/sobe/${id}`);\n  }\n\n  // deleteVoziloFromRent(id: number): Observable<{}> {\n  //   return this.http.delete(`/api/vozila/${id}/deleteFromRent`);\n  // }\n\n  update(hotel: number,  id: number, vozilo: Soba): Observable<Soba> {\n    return this.http.put<Soba>(`/hoteli/${hotel}/sobe`, vozilo);\n  }\n\n  add(hotel: number, vozilo: Soba): Observable<Soba> {\n    return this.http.post<Soba>(`/hoteli/${hotel}/sobe`, vozilo);\n  }\n\n /* traziVozilo(rezervacijaVozila: RezervacijaVozila, idRent: number): Observable<Vozilo[]> {\n    return this.http.post<Vozilo[]>(`/api/vozila/rezervacijeVozila/${idRent}`, rezervacijaVozila);\n  }\n\n  rezervisiVozilo(rezervacijaVozila: RezervacijaVozila, idRezervacije: number): Observable<RezervacijaVozila> {\n    return this.http.post<RezervacijaVozila>(`/api/vozila/rezervacijeVozila/klikRezervisano/${idRezervacije}`, rezervacijaVozila);\n  }\n\n  vratiSveTipove(): Observable<string[]> {\n    return this.http.get<string[]>('/api/vozila/tipoviVozila');\n  }\n\n  findHistoryOfRentedCars(): Observable<RezervacijaVozila[]> {\n    return this.http.get<RezervacijaVozila[]>('api/rezervacijeVozila/istorijaRezervisanihVozila');\n  }\n\n  oceniRezervisanoVozilo(id: number, ocena: number){\n    return this.http.get<RezervacijaVozila>(`api/rezervacijeVozila/${id}/postaviOcenu/${ocena}`);\n  }\n\n  minimalnaCenaVozila(){\n    return this.http.get<number>(`api/vozila/minimalnaCena`);\n  }\n\n  maksimalnaCenaVozila(){\n    return this.http.get<number>(`api/vozila/maksimalnaCena`);\n  }\n\n  findRezervacijuVozilo(id: number) : Observable<RezervacijaVozila>{\n    return this.http.get<RezervacijaVozila>(`/api/rezervacijeVozila/${id}`);\n  }*/\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/hotel/soba.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Garaza } from 'app/model/vozila/garaza';\n\n@Injectable()\nexport class GarazaService {\n\n  constructor(private http: HttpClient) { }\n  \n  addFilijala(novaFilijala: Garaza, idKompanije: number): Observable<Garaza> {\n    return this.http.post<Garaza>(`/kompanije-vozila/${idKompanije}/garaze`, novaFilijala);\n  }\n\n  /*addToRent(id: number, idRent: number): Observable<Garaza[]> {\n    return this.http.get<Garaza[]>(`/api/rentacarovi/${idRent}/dodajURentFilijalu/${id}`);\n  }*/\n\n  findOne(kompanijaId: number, id: number): Observable<Garaza> {\n    return this.http.get<Garaza>(`/kompanije-vozila/${kompanijaId}/garaze/${id}`);\n  }\n\n  findAll(kompanijaId: number): Observable<Garaza[]> {\n    return this.http.get<Garaza[]>('/kompanije-vozila/' + kompanijaId + '/garaze');\n  }\n\n  delete(kompanijaId: number, id: number): Observable<{}> {\n    return this.http.delete(`/kompanije-vozila/${kompanijaId}/garaze/${id}`);\n  }\n\n  update(kompanijaId: number, filijala: Garaza): Observable<Garaza> {\n    return this.http.put<Garaza>(`/kompanije-vozila/${kompanijaId}/garaze`, filijala);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vozila/garaza.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { KompanijaVozila } from 'app/model/vozila/kompanijaVozila';\nimport { Adresa } from 'app/model/opsti/adresa';\n\n@Injectable()\nexport class KompanijaVozilaService {\n\n  constructor(private http: HttpClient) { }\n  \n  addRentACar(noviRentACar: KompanijaVozila): Observable<KompanijaVozila> {\n    return this.http.post<KompanijaVozila>('/kompanije-vozila', noviRentACar);\n  }\n\n  findOne(id: number): Observable<KompanijaVozila> {\n    return this.http.get<KompanijaVozila>(`/kompanije-vozila/${id}`);\n  }\n\n  findAll(): Observable<KompanijaVozila[]> {\n    return this.http.get<KompanijaVozila[]>('/kompanije-vozila');\n  }\n\n  deleteRentACar(id: number): Observable<{}> {\n    return this.http.delete(`/kompanije-vozila/${id}`);\n  }\n\n  updateRentACar(id: number, rentacar: KompanijaVozila): Observable<KompanijaVozila> {\n    return this.http.put<KompanijaVozila>(`/kompanije-vozila`, rentacar);\n  }\n\n\n  vratiSveNazive(): Observable<string[]> {\n    return this.http.get<string[]>('/adrese'); //popraviti jos\n  } \n\n  vratiSveAdrese(): Observable<Adresa[]> {\n    return this.http.get<Adresa[]>('/adrese'); //popraviti jos\n  }\n\n  trazenjeRentacarova(naziv: string, adresa: string): Observable<KompanijaVozila[]> { //dopraviti je\n    let listaUslova: string[] = []\n    listaUslova.push(naziv.toString());\n    listaUslova.push(adresa.toString());\n    return this.http.post<KompanijaVozila[]>(`/kompanije-vozila/trazenjeRentacarovi`, listaUslova);\n  }\n\n  findAllSort(paramSort: string, paramDir: string): Observable<KompanijaVozila[]> {\n    return this.http.get<KompanijaVozila[]>(`/kompanije-vozila?sort=${paramSort},${paramDir}`);\n  }\n\n  /*vratiListuOcenjivihServisa(): Observable<number[]>{\n    return this.http.get<number[]>(`api/rezervacijeVozila/listaOcenjivih`);\n  }\n\n  oceniServis(id: number, ocena: OcenaRenta): Observable<OcenaRenta> {\n    return this.http.put<OcenaRenta>(`/api/ocene/${id}/postaviOcenuRent`, ocena);\n  }\n\n  prihodServisa(odDatuma: string, doDatuma: string, idRenta: number): Observable<number>{  \n    let params = new HttpParams();\n    params = params.append('odDatuma', odDatuma);\n    params = params.append('doDatuma', doDatuma);\n    params = params.append('idRenta', idRenta.toString());\n    return this.http.get<number>(`api/rezervacijeVozila/prihodiServisa`, {params: params});\n  }\n\n  posecenostServisa(id: number, odDatuma: string, doDatuma:string): Observable<String[]>{\n    let params = new HttpParams();\n    params = params.append('odDatuma', odDatuma);\n    params = params.append('doDatuma', doDatuma);\n    return this.http.get<String[]>(`/api/rezervacijeVozila/${id}/dnevnaPosecenost`, {params : params});\n  }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vozila/kompanija-vozila.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Vozilo } from 'app/model/vozila/vozilo';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class VoziloService {\n\n  constructor(private http: HttpClient) { }\n  \n  \n\n  /*addToRent(id: number, idRent: number): Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/${idRent}/dodajURentVozilo/${id}`);\n  }*/\n\n  findOne(kompanijaid: number,  garazaid: number, id: number): Observable<Vozilo> {\n    return this.http.get<Vozilo>(`/kompanije-vozila/${kompanijaid}/garaze/${garazaid}/vozila/${id}`);\n  }\n\n  findAll(kompanijaid: number,  garazaid: number,): Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/kompanije-vozila/${kompanijaid}/garaze/${garazaid}/vozila/`);\n  }\n\n  /*findAllVozilaToAdd(): Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/svaVozilaKojaSeMoguDodati`);\n  }\n\n  findVozilaForRent(id: number):Observable<Vozilo[]> {\n    return this.http.get<Vozilo[]>(`/api/rentacarovi/${id}/prikazVozila`);\n  }*/\n\n  deleteVozilo(kompanijaid: number,  garazaid: number, id: number): Observable<{}> {\n    return this.http.delete(`/kompanije-vozila/${kompanijaid}/garaze/${garazaid}/vozila/${id}`);\n  }\n\n  // deleteVoziloFromRent(id: number): Observable<{}> {\n  //   return this.http.delete(`/api/vozila/${id}/deleteFromRent`);\n  // }\n\n  updateVozilo(kompanijaid: number,  garazaid: number, id: number, vozilo: Vozilo): Observable<Vozilo> {\n    return this.http.put<Vozilo>(`/kompanije-vozila/${kompanijaid}/garaze/${garazaid}/vozila`, vozilo);\n  }\n\n  addVozilo(kompanijaid: number,  garazaid: number, vozilo: Vozilo): Observable<Vozilo> {\n    return this.http.post<Vozilo>(`/kompanije-vozila/${kompanijaid}/garaze/${garazaid}/vozila`, vozilo);\n  }\n\n /* traziVozilo(rezervacijaVozila: RezervacijaVozila, idRent: number): Observable<Vozilo[]> {\n    return this.http.post<Vozilo[]>(`/api/vozila/rezervacijeVozila/${idRent}`, rezervacijaVozila);\n  }\n\n  rezervisiVozilo(rezervacijaVozila: RezervacijaVozila, idRezervacije: number): Observable<RezervacijaVozila> {\n    return this.http.post<RezervacijaVozila>(`/api/vozila/rezervacijeVozila/klikRezervisano/${idRezervacije}`, rezervacijaVozila);\n  }\n\n  vratiSveTipove(): Observable<string[]> {\n    return this.http.get<string[]>('/api/vozila/tipoviVozila');\n  }\n\n  findHistoryOfRentedCars(): Observable<RezervacijaVozila[]> {\n    return this.http.get<RezervacijaVozila[]>('api/rezervacijeVozila/istorijaRezervisanihVozila');\n  }\n\n  oceniRezervisanoVozilo(id: number, ocena: number){\n    return this.http.get<RezervacijaVozila>(`api/rezervacijeVozila/${id}/postaviOcenu/${ocena}`);\n  }\n\n  minimalnaCenaVozila(){\n    return this.http.get<number>(`api/vozila/minimalnaCena`);\n  }\n\n  maksimalnaCenaVozila(){\n    return this.http.get<number>(`api/vozila/maksimalnaCena`);\n  }\n\n  findRezervacijuVozilo(id: number) : Observable<RezervacijaVozila>{\n    return this.http.get<RezervacijaVozila>(`/api/rezervacijeVozila/${id}`);\n  }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/vozila/vozilo.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts"],"sourceRoot":"webpack:///"}